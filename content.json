{"pages":[{"title":"About Me","text":"​ 程序员小黄，会吃福建人的广东人，面临90后中年危机，爱的人都叫夏洛特。 Roles 华南理工大学SE本科在读 M$ Club技术部指定背锅位 神(hua)出(shui)鬼(mo)没(yu)校园足球边裁 每次签到都慢过107的宿舍长 Projects赶过死线 云计算大作业 建模课大作业 数据库实训 西加加实训 搞过副业 卡片式日记应用开发 俱乐部门户网站开发 BCD实验室软件开发 抱过大腿 BBT SRP ACM GAC 互联网+ 黑客马拉松 微软空间站 看过风景 拼客学院Linux运维训练营 微软亚研2019技术夏令营 Focus 迷恋云计算，操着开发的心选的大数据（非ML狂热粉丝，水平止于调包 逃 FullStack爱好者（实际上是全菜工程师，手持跨平台开发、轻量级应用潜力股，用谷歌全家桶武装大脑 励志成为优秀的软件工程狮+架构狮，respect计算机科学家，认识超棒的设计狮+产品经理 Hobbies 努力为祖国健康打码五十年 诺基亚信仰用户，电子产品云收藏者 左派青年，涉猎文史哲 平权，能出力的出力，能发声的发声 书、歌、剧，赏画有待提高 曾经是一名不合格的剪刀手 热爱小语种，推广文言文 只有篆刻的时候字是允许丑的 FM拜仁Chef Coach，没事踢波 精神健身达人 Links Github Stack Overflow V2EX Zhihu Jianshu Gitee SegmentFault Todos 更新链接 丰富图片 详细介绍","link":"/about/index.html"}],"posts":[{"title":"\\#Cloud Computing\\# Introduction to Cloud Infrastructure Technologies(2) Infrastructure as a Service (IaaS)","text":"Welcome to LFS151x: Introduction to Cloud Infrastructure Technologies By the end of this chapter, you should be able to: Explain the concept of Infrastructure as a Service (IaaS). Distinguish between different IaaS providers. Provision a virtual machine on top of different IaaS providers. Infrastructure as a Service (IaaS)Concept“Infrastructure as a Service (IaaS) is a form of cloud computing which provides on-demand physical and virtual computing resources, storage, network, firewall, load balancers, etc. To provide virtual computing resources, IaaS uses some form of hypervisor, like Xen, KVM, VMware ESX/ESXi, Hyper-V, etc.ther than VMs, some IaaS providers offer bare metal machines for provisioning”. Amazon EC2Concept*”Amazon Web Services (AWS) is one of the leaders in providing different cloud services. With Amazon Elastic Compute, Amazon provides the IaaS infrastructure, on which most of the other services are built. We can manage compute resources from the Amazon EC2 web interface and can scale up or down, depending on the need. AWS also offers a command line to manage the instances from the command line. Amazon EC2 uses XEN and KVM hypervisors to provision compute resources”.* Feature Amazon EC2 offers compute instances for different resources, which we can choose from depending on our need. Amazon EC2 provides some preconfigured images, called Amazon Machine Images (AMIs). These images can be used to quickly start instances. We can also create our own custom AMIs to boot our instances. One important aspect to note is that Amazon supports configuring security and network access to our instances. With Amazon Elastic Block Store (EBS) we can attach/detach persistent storage to our instances. EC2 supports the provisioning of dedicated hosts, which means we can get an entire physical machine for our use. Create an Elastic IP for remapping the Static IP address automatically. Provision a Virtual Private Cloud for isolation. Amazon Virtual Private Cloud provides secure and robust networking for Amazon EC2 instances. Use CloudWatch for monitoring resources and applications. Use Auto Scaling to dynamically resize your resources, etc. Azure Virtual MachineConcept‘“Azure is Microsoft’s cloud offering, which has products in different domains, such as compute, web and mobile, data and storage, Internet of Things, and many others. Through Azure Virtual Machine, Microsoft provides compute provisioning and management: We can manage Virtual Machines from Azure’s web interface. Azure also provides a command line utility to manage resources and applications on the Azure cloud”. Feature Azure lets you choose between different tiers, based on the usage and the operating systems or the predefined application virtual machines (SharePoint, Oracle, etc.). Using Resource Manager templates, we can define the template for the virtual machine deployment. Azure offers other features as well, like making seamless hybrid connections, faster I/O in certain types of tiers, backups, etc. Google Compute EngineConcept”Google Cloud Platform is Google’s Cloud offering, which has many products in different domains, like compute, storage, networking, big data, and others. Google Compute Engine provides the compute service. We can manage the instances through GUI, APIs or command line. Access to the individual VM’s console is also available“. Feature GCE supports different machine types, which we can choose from depending on our need. GCE has other features as well, like Persistent Disk, Local SSD, Global Load Balancing, Compliance and Security, Automatic Discount, etc. DigitalOceanConcept*”DigitalOcean helps you create a simple cloud quickly, in as little as 55 seconds. All of the VMs are created on top of the KVM hypervisor and have SSD (Solid-State Drive) as the primary disk.”* Feature Based on your need, DigitalOcean offers different plans. DigitalOcean provides other features, like Floating IPs, Shared Private Networking, Load Balancers, Team Accounts, etc. It offers a one-click installation of a multitude of application stacks like LAMP, LEMP, MEAN, and Docker. OpenStackConcept*”With OpenStack, we can offer a cloud computing platform for public and private clouds. Other than providing a IaaS solution, OpenStack has evolved over time to provide other services, like Database, Storage, etc”.* FeatureDue to the modular nature of OpenStack, anyone can add additional components to get specific features or functionality. Some of the major OpenStack components are KeystoneProvides Identity, Token, Catalog, and Policy services to projects. NovaProvides on-demand compute resources. HorizonProvides the Dashboard, which is a web-based user interface to manage the OpenStack service. NeutronImplements the network as a service and provides network capabilities to different OpenStack components. GlanceProvides a service where users can upload and discover data assets, like images and metadata. SwiftProvides a highly available, distributed, eventually consistent object/blob store. CinderProvides block storage as a service. HeatProvides a service to orchestrate composite cloud applications, using a declarative template format through an OpenStack-native REST API. CeilometerIt is part of the Telemetry project and provides data collection services for billing and other purposes. Each of the OpenStack components is also modular by design. For example, with Nova we can select an underneath hypervisor depending on the requirement, which can be either libvirt (qemu/KVM), Hyper-V, VMware, XenServer, Xen via libvirt.","link":"/2019/07/12/Introduction to Cloud Infrastructure Technologies(2) Infrastructure as a Service (IaaS)/"},{"title":"\\#Cloud Computing\\# Introduction to Cloud Infrastructure Technologies(3) Platform as a Service (PaaS)","text":"Welcome to LFS151x: Introduction to Cloud Infrastructure Technologies By the end of this chapter, you should be able to: Explain the concept of Platform as a Service (PaaS). Distinguish between different PaaS providers. Deploy an application on top of different PaaS providers: Cloud Foundry, OpenShift, Heroku. Platform as a Service (PaaS)Concept*”Platform as a Service (PaaS) is a class of cloud computing services which allows its users to develop, run, and manage applications without worrying about the underlying infrastructure. With PaaS, users can simply focus on building their applications, which is a great help to developers. We can either use PaaS services offered by different cloud computing providers like Amazon, Google, Azure, etc., or deploy it on-premise, using software like OpenShift Origin. PaaS can be deployed on top of IaaS, or, independently on VMs, bare metal, and containers”.* Cloud FoudryConcept*”Cloud Foundry CF) is an open source Platform as a Service (PaaS) that provides a choice of clouds, developer frameworks, and application services. It can be deployed on-premise or on IaaS, like AWS, vSphere, or OpenStack. There are many commercial CF cloud providers as well, like IBM Cloud Foundry, SAP Cloud Platform, Pivotal Cloud Foundry, etc”.* FeatureAmong the characteristics employed by Cloud Foundry are the following: Application portability Application auto-scaling Centralized platform management Centralized logging Dynamic routing Application health management Role-based application deployment Horizontal and vertical scaling Security Support for different IaaS technologies. CF Application RuntimeConcept*”CF Application Runtime, previously known as Elastic Runtime, is used by developers to run applications written in any language or framework on the cloud of their choice”.* Feature CF Application Runtime uses buildpacks, which provide the framework and runtime support for the applications. They are programming language-specific and have information about how to download dependencies and configure specific applications. Developers can build new buildpacks or customize the existing ones. In addition, by using the Open Service Broker API, we can connect our application to external services like databases or third-party SaaS providers. As presented in the graphic below, the CF Application Runtime platform can manage the entire workflow and lifecycle of the application, from routing to logging. CF Container RuntimeConcept*”CF Container Runtime gives Cloud Foundry the flexibility to deploy developer-built, pre-packaged applications using containers”.* Feature BOSH is a cloud-agnostic open source tool for release engineering, deployment, and lifecycle management of complex distributed systems. Kubernetes is a container orchestrator which allows us to deploy containers. The CF Container Runtime platform does it by deploying containers on a Kubernetes cluster, which is managed by CF BOSH. With CF BOSH, you can achieve high availability, scaling, VM healing and upgrades for the Kubernetes cluster. OpenShiftConcept*”OpenShift is an open source PaaS solution provided by Red Hat. It is built on top of the container technology, which uses Kubernetes underneath. OpenShift can be deployed on top of a full-fledged Linux OS or on a Micro OS which is specifically designed to run containers and Kubernetes”.* Feature With OpenShift, we can deploy containerized applications. With application images and QuickStart application templates, applications can be deployed with one click. As OpenShift uses Kubernetes, we get all the features offered by Kubernetes, like adding or removing nodes at runtime, persistent storage, auto-scaling, etc. OpenShift has a framework called Source to Image (S2I), which enables us to create container images from the source code repository to deploy applications easily. OpenShift integrates well with Continuous Deployment tools to deploy applications as part of the CI/CD pipeline. With CLI, GUI and IDE integration applications can be managed easily. It enables application portability, meaning that any application created on OpenShift can run on any platform that supports Docker. OpenShift integrated Docker registry, automatic edge load balancing, cluster logging, and integrated metrics. HerokuConcept“Heroku is a fully-managed container-based cloud platform, with integrated data services and a strong ecosystem. Heroku is used to deploy and run modern applications”. Applications should contain the source code, its dependency information and the list of named commands to be executed to deploy it, in a file called Procfile. For each supported language, it has a pre-built image which contains a compiler for that language. This pre-built image is referred to as a buildpack. Multiple buildpacks can be used together. We can also create a custom buildpack. While deploying, we need to send the application’s content to Heroku, either via Git, GitHub, Dropbox or via an API. Once the application is received by Heroku, a buildpack is selected based on the language of preference. To create the runtime which is ready for execution, we compile the application after fetching its dependency and configuration variables on the selected buildpack. This runtime is often referred to as a slug. We can also use third party add-ons to get access to value-added services like logging, caching, monitoring, etc. A combination of slug, configuration variables, and add-ons is referred to as a release, on which we can perform upgrade or rollback. Depending on the process-type declaration in the Procfile, a virtualized UNIX container is created to serve the process in an isolated environment, which can be scaled up or down, based on the requirements. Each virtualized UNIX container is referred to as a dyno. Each dyno gets its own ephemeral storage. Dyno Manager manages dynos across all applications running on Heroku. Feature Individual components of an application can be scaled up or down using dynos. It is a very rich ecosystem, and it allows us to extend the functionality of an application with add-ons. Add-ons allow us to easily integrate our applications with other fully-managed cloud services like database, logging, email, etc. Applications can be easily integrated with Salesforce. It enables a development-friendly workflow. It provides the ability to do automated backups.","link":"/2019/07/12/Introduction to Cloud Infrastructure Technologies(3) Platform as a Service (PaaS)/"},{"title":"\\#Cloud Computing\\# Introduction to Cloud Infrastructure Technologies(1) Virtualization","text":"Welcome to LFS151x: Introduction to Cloud Infrastructure Technologies By the end of this chapter, you should be able to: Describe the different types of virtualization. Explain how hypervisors can be used to create virtual machines. Create and configure virtual machines automatically, using KVM, VirtualBox and Vagrant. VirtualizationConcept*”In computing, virtualization refers to the act of creating a virtual (rather than actual) version of something, including virtual computer hardware platforms, operating systems, storage devices, and computer resources”.* KVM VirtualBox VirtualBox is distributed under the GNU General Public License (GPL) version 2. VagrantConcept*”Configuring and sharing one VM is easy, but, when we have to deal with multiple VMs for the same project, doing everything manually can be tiresome. Vagrant by HashiCorp helps us automate the setup of one or more VMs by providing an end-to-end lifecycle using the vagrant command line. Vagrant is a cross-platform tool. It can be installed on Linux, Mac OSX, and Windows. We have to use different providers, depending on the OS. It has recently added support for Docker, which can help us manage Docker containers.“* Feature Boxes We need to provide an image in the Vagrantfile, which we can use to instantiate machines. In the example above, we have used centos/7 as the base image. If the image is not available locally, then it can be downloaded from a central repository like Atlas, which is the image repository provided by HashiCorp. We can version these images and use them depending on our need, by updating the Vagrantfile accordingly. Vagrant Providers Providers are the underlying engine/hypervisor used to provision a machine. By default, Vagrant supports VirtualBox, Hyper-V and Docker. We also have custom providers, like KVM, AWS, etc. VirtualBox is the default provider. Synced Folders With the Synced Folder feature, we can sync a directory on the host system with a VM, which helps the user manage shared files/directories easily. For example, in the above example, if we un-comment the line below from Vagrantfile, then the ../data folder from the current working directory of the host system would be shared with the /vagrant_data file on the VM. 1config.vm.synced_folder &quot;../data&quot;, &quot;vagrant_data&quot; ProvisioningProvisioners allow us to automatically install software, make configuration changes, etc. after the machine is booted. It is a part of the vagrant up process. There are many types of provisioners available, such as File, Shell, Ansible, Puppet, Chef, Docker, etc. In the example below, we used Shell as the provisioner to install the vim package. 123config.vm.provision &quot;shell&quot;, inline: &lt;&lt;-SHELL yum install vim -ySHELL PluginsWe can use plugins to extend the functionality of Vagrant. VagrantFile VagrantCmd vagrant up: start VM vagrant halt: stop VM vagrant destory: delete VM vagrant status: check status vagrant user: login in as user","link":"/2019/07/11/Introduction to Cloud Infrastructure Technologies(1) Virtualization/"},{"title":"\\#Cloud Computing\\# Introduction to Cloud Infrastructure Technologies(0) Introduction","text":"Welcome to LFS151x: Introduction to Cloud Infrastructure Technologies Once you complete this course, you will have a good understanding of the terminology, tools, and technologies associated with today’s top cloud platforms, which can help pave the way to a lucrative career in technology. IntroductionConcept*”Cloud computing is a model for enabling ubiquitous, convenient, on-demand network access to a shared pool of configurable computing resources (e.g. networks, servers, storage, applications, and services) that can be rapidly provisioned and released with minimal management effort or service provider interaction”.* Term nested virtualization overcommitting Feature Speed and AgilityThe required resources are just one click away, which saves time and provides agility. We can also easily scale up or down, depending on our need. CostIt reduces the up-front cost to set up the infrastructure, and allows us to focus on applications and business. Cloud providers have features to estimate the cost, which helps us plan better. Easy Access to ResourcesAs users, we can access our infrastructure from any place and device, as long as we can connect to the provider. MaintenanceAll the maintenance work for the resources is done by the provider. As end users, we do not have to worry about this aspect. Multi-tenancyMultiple users can use the same pool of resources. ReliabilityResources can be hosted in different data center locations, to provide increased reliability. Category Infrastructure as a Service (IaaS) Platform as a Service (PaaS) Software as a Service (SaaS) Model Private CloudIt is designated and operated solely for one organization. It can be hosted internally or externally and managed by internal teams or a third party. We can build a private cloud using a software stack like OpenStack. Public CloudIt is open to the public and anybody can use it after swiping the credit card. Amazon Web Services and Google Compute Engine are examples of public clouds. Hybrid CloudPublic and private clouds are bound together to offer the hybrid cloud. Among other things, a hybrid cloud can be used to: Store sensitive information on a private cloud, while offering public services based on that information from a public cloud. Meet the temporary resources needed from the public cloud. These temporary resources cannot be met from a private cloud.","link":"/2019/07/11/Introduction to Cloud Infrastructure Technologies(0) Introduction/"},{"title":"\\#Configuration\\# 从零到壹：GitHub Pages + Hexo = Blog","text":"利用GitHub Pages+Hexo打造一个个人博客，主要分为以下五个部分： 环境准备 Environment 文件配置 Configuration 个性化 Customization 博客写作 Writing 双备份 Backup 环境准备 Environment安装Git + Github 安装Git部署插件: 1$ npm install hexo-deployer-git --save 安装Node.js 安装Node.js: Download | Node.js 检查是否安装成功: 12$ node -v$ npm -v 安装Hexo 安装Hexo: 1$ npm install -g hexo-cli 检查是否安装成功: 1$ hexo -v 初始化: 1$ hexo init blog 文件配置 Configuration本地运行123$ hexo clean # 删除缓存$ hexo g # 生成Hexo页面$ hexo s # 本地部署Hexo页面 远程运行123$ hexo clean # 删除缓存$ hexo g # 生成Hexo页面$ hexo d # 远程部署Hexo页面 基本配置/_config.yml 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: LotteWong # 个人博客显示名称subtitle: 在代码符号表象中避难。 # 个人博客副标题description: # 搜索引擎描述信息keywords: # 搜索引擎关键词author: LotteWong # 网站作者avatar: ./themes/icarus/source/images/favicon.ico # 网站头像language: en # 网站语言timezone: Asia/HongKong # 网站时区# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: http://yoursite.comroot: /permalink: :year/:month/:day/:title/permalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace: # Home page setting# path: Root path for your blogs index page. (default = '')# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: '' per_page: 10 order_by: -date # Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/plugins: # 设置个人博客插件theme: icarus # 设置个人博客主题# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git # 部署类型 repo: git@github.com:LotteWong/lottewong.github.io.git # 部署仓库 branch: master # 部署分支 个性化 Customization/themes/icarus/_config.yml 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234# Version of the Icarus theme that is currently usedversion: 2.3.0# Path or URL to the website's iconfavicon: /images/favicon.ico# Path or URL to RSS atom.xmlrss: # Path or URL to the website's logo to be shown on the left of the navigation bar or footerlogo: /images/logo.png# Open Graph metadata# https://hexo.io/docs/helpers.html#open-graphopen_graph: # Facebook App ID # fb_app_id: # Facebook Admin ID # fb_admins: # Twitter ID # twitter_id: # Twitter site # twitter_site: # Google+ profile link # google_plus: # Navigation bar link settingsnavbar: # Navigation bar menu links menu: Home: / Archives: /archives Categories: /categories Tags: /tags About: /about # Navigation bar links to be shown on the right # links: # Download on GitHub: # icon: fab fa-github # url: 'https://github.com/LotteWong'# Footer section link settingsfooter: # Links to be shown on the right of the footer section links: Github: icon: fab fa-github url: 'https://github.com/LotteWong' RSS: icon: fas fa-rss url: 'https://www.zhihu.com/people/lai-xiu-ping'# Article display settingsarticle: # Code highlight theme # https://github.com/highlightjs/highlight.js/tree/master/src/styles highlight: atom-one-light # Whether to show article thumbnail images thumbnail: true # Whether to show estimate article reading time readtime: true# Search plugin settings# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Searchsearch: # Name of the search plugin type: insight# Comment plugin settings# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Commentcomment: # Name of the comment plugin type: # Donation entries# https://ppoffice.github.io/hexo-theme-icarus/categories/Donation/donate: - # Donation entry name type: alipay # Qrcode image URL qrcode: '/images/alipay.png' - # Donation entry name type: wechat # Qrcode image URL qrcode: '/images/wechat.png' - # Donation entry name type: paypal # Paypal business ID or email address business: 'SuperGsama@outlook.com' # Currency code currency_code: USD - # Donation entry name # type: patreon # URL to the Patreon page # url: ''# Share plugin settings# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Shareshare: # Share plugin name type: # Sidebar settings.# Please be noted that a sidebar is only visible when it has at least one widgetsidebar: # left sidebar settings left: # Whether the left sidebar is sticky when page scrolls # https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/ sticky: false # right sidebar settings right: # Whether the right sidebar is sticky when page scrolls # https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/ sticky: false# Sidebar widget settings# https://ppoffice.github.io/hexo-theme-icarus/categories/Widgets/widgets: - # Widget name type: profile # Where should the widget be placed, left or right position: left # Author name to be shown in the profile widget author: LotteWong # Title of the author to be shown in the profile widget author_title: SCUT, Undergraduate # Author's current location to be shown in the profile widget location: Guangzhou, China # Path or URL to the avatar to be shown in the profile widget avatar: # Email address for the Gravatar to be shown in the profile widget gravatar: # Whether to show avatar image rounded or square avatar_rounded: false # Path or URL for the follow button follow_link: 'https://www.jianshu.com/u/80ee6b6f3418' # Links to be shown on the bottom of the profile widget social_links: Project: icon: fab fa-creative-commons url: 'https://github.com/scutse-man-month-myth/InkYear' Organization: icon: fab fa-creative-commons-by url: 'https://github.com/scutse-man-month-myth' Developer: icon: fab fa-github url: 'https://github.com/LotteWong' #Facebook: #icon: fab fa-facebook #url: 'https://facebook.com' #Twitter: #icon: fab fa-twitter #url: 'https://twitter.com' #Dribbble: #icon: fab fa-dribbble #url: 'https://dribbble.com' - # Widget name type: toc # Where should the widget be placed, left or right position: left - # Widget name type: links # Where should the widget be placed, left or right position: left # Links to be shown in the links widget links: Dart: 'https://dart.dev/' Flutter: 'https://flutter.dev/' - # Widget name type: category # Where should the widget be placed, left or right position: left - # Widget name type: tagcloud # Where should the widget be placed, left or right position: left - # Widget name type: recent_posts # Where should the widget be placed, left or right position: right - # Widget name type: archive # Where should the widget be placed, left or right position: right - # Widget name type: tag # Where should the widget be placed, left or right position: right# Other plugin settingsplugins: # Enable page animations animejs: true # Enable the lightGallery and Justified Gallery plugins # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/gallery-plugin/ gallery: true # Enable the Outdated Browser plugin # http://outdatedbrowser.com/ outdated-browser: true # Enable the MathJax plugin # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/mathjax-plugin/ mathjax: true # Show the back to top button on mobile devices back-to-top: true # Google Analytics plugin settings # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Google-Analytics google-analytics: # Google Analytics tracking id tracking_id: # Baidu Analytics plugin settings # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Baidu-Analytics baidu-analytics: # Baidu Analytics tracking id tracking_id: # Hotjar user feedback plugin # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Hotjar hotjar: # Hotjar site id site_id: # Show a loading progress bar at top of the page progressbar: true # Show the copy button in the highlighted code area clipboard: true # BuSuanZi site/page view counter # https://busuanzi.ibruce.info busuanzi: false# CDN provider settings# https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/speed-up-your-site-with-custom-cdn/providers: # Name or URL of the JavaScript and/or stylesheet CDN provider cdn: jsdelivr # Name or URL of the webfont CDN provider fontcdn: google # Name or URL of the webfont Icon CDN provider iconcdn: fontawesome 博客写作 Writing 默认 1$ hexo new \"blog title\" 自定义 1234567891011title: {{ blog title }}categories: {{ blog category }}tags:- {{ blog tag }}thumbnail: {{ blog thumbnail }}{{ Abstract }}&lt;!-- more --&gt;{{ Content }} 双备份 Backup Hexo备份: 12# master branch$ hexo d Src备份: 12345# dev branch$ git checkout dev$ git add --all$ git commit -m \"new blog\"$ git push origin dev 待办事项 Todos 对应图标 更多插件 绑定域名 更新外链 参考链接 References GitHub+Hexo 搭建个人网站详细教程 Hexo icarus","link":"/2019/07/10/从零到壹：GitHub Pages + Hexo = Blog/"}],"tags":[{"name":"IaaS","slug":"IaaS","link":"/tags/IaaS/"},{"name":"AWS","slug":"AWS","link":"/tags/AWS/"},{"name":"Azure","slug":"Azure","link":"/tags/Azure/"},{"name":"Google Cloud","slug":"Google-Cloud","link":"/tags/Google-Cloud/"},{"name":"DigitalOcean","slug":"DigitalOcean","link":"/tags/DigitalOcean/"},{"name":"OpenStack","slug":"OpenStack","link":"/tags/OpenStack/"},{"name":"PaaS","slug":"PaaS","link":"/tags/PaaS/"},{"name":"Cloud Foudry","slug":"Cloud-Foudry","link":"/tags/Cloud-Foudry/"},{"name":"OpenShift","slug":"OpenShift","link":"/tags/OpenShift/"},{"name":"Heroku","slug":"Heroku","link":"/tags/Heroku/"},{"name":"Virtualization","slug":"Virtualization","link":"/tags/Virtualization/"},{"name":"KVM","slug":"KVM","link":"/tags/KVM/"},{"name":"VirtualBox","slug":"VirtualBox","link":"/tags/VirtualBox/"},{"name":"Vagrant","slug":"Vagrant","link":"/tags/Vagrant/"},{"name":"Introduction","slug":"Introduction","link":"/tags/Introduction/"},{"name":"GitHub Pages","slug":"GitHub-Pages","link":"/tags/GitHub-Pages/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"}],"categories":[{"name":"Cloud Computing","slug":"Cloud-Computing","link":"/categories/Cloud-Computing/"},{"name":"Configuration","slug":"Configuration","link":"/categories/Configuration/"}]}
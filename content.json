{"pages":[{"title":"About Me","text":"程序员小黄，会吃福建人的广东人，面临90后中年危机，爱的人都叫夏洛特。 Roles 华南理工大学SE本科在读 M$ Club技术部指定背锅位 准备去AWS (C)l(ub)康康 神(hua)出(shui)鬼(mo)没(yu)校园足球边裁 每次签到都慢过107的宿舍长 Projects赶过死线 云计算大作业 建模课大作业 项目课大作业 测试课大作业 数据库实训 西加加实训 搞过副业 卡片式日记应用开发 抱过大腿 BBT SRP ACM GAC 互联网+大赛 黑客马拉松 2017 2018 2019 微软空间站 Bot Framework 神经网络简明教程 CNTK Speech API 中国农行雅典娜数据挖掘大赛 中国计算机学会数据挖掘大赛 看过风景 拼客学院Linux运维训练营 微软亚研2019技术夏令营 正在背锅 俱乐部微信程序开发 多剧情分支游戏开发 俱乐部门户网站开发 即将生产 俱乐部文件服务器 华南地区镜像站 俱乐部私有云平台 Focus 迷恋云计算，操着开发的心选的大数据方向（非ML狂热粉丝，目前水平止于调包 逃 FullStack爱好者（实际上是全菜工程师，手持跨平台开发、轻量级应用潜力股，用谷歌全家桶武装大脑，后被M$诱惑有叛逃迹象 励志成为优秀的软件工程狮+架构狮，respect计算机科学家，认识超棒的设计狮+产品经理，如果可以想当一位还不错的PM Hobbies 努力为祖国健康打码五十年 诺基亚信仰用户，电子产品云收藏者 左派青年，涉猎文史哲 平权，能出力的出力，能发声的发声 书、歌、剧，赏画有待提高 曾经是一名不合格的剪刀手 热爱小语种，推广文言文 只有篆刻的时候字是允许丑的 FM拜仁Chef Coach，没事踢波 精神健身达人 Links Github Stack Overflow V2EX Zhihu Jianshu Gitee SegmentFault Todos 丰富图片 详细介绍","link":"/about/index.html"}],"posts":[{"title":"\\#Configuration\\# 如何令本地代码在服务器端启动：以GitHub作中转","text":"利用GitHub作为中转，实现本地端和服务器的双向互通，主要分为以下五个部分： 前期的准备 从远程克隆 本地端修改 推送到远程 服务器操作 前期的准备Step 1: 环境需要 Git GitHub SSH客户端 Windows用户：PuTTY Unix用户：cmd Step 2: Git和GitHub配置配置Git 安装Git 配置GitHub 添加远程库 Step 3: SSH配置Windows用户 使用 PuTTY 远程登录管理服务器 Unix用户 如何使用SSH登录远程服务器 从远程克隆Step 1: 在GitHub上Fork对应repo 选择特定repo，如：https://github.com/LotteWong/Bone-Metastasis-Neural-Network 点击Fork按钮，即可在自己的GitHub看到对应的repo Step 2: git clone到本地目录 在自己的GitHub打开对应repo，复制SSH key 切到想要下载到的目录，使用git clone命令 本地端修改Step 1: 本地edit 在本地修改文件 Step 2: 本地add 学习git add命令 Step 3: 本地commit 学习git commit命令 推送到远程Step 1: bash查看远程服务器 Step 2: push到GitHub 服务器操作Step 1: SSH登录远程服务器 按照前期的准备中的教程登录服务器 Step 2: pull到服务器 pwd：查看当前路径 ll: 查看当前路径下的目录和文件 cd $path：切换特定路径 git clone：若目录中还没有repo，按上述步骤做过的，在服务器进行git clone【PS：因为之前已经git clone过，所以服务器上已经有Bone-Metastasis-Neural-Network目录】 git pull：若目录中已经有repo，使用git pull命令将GitHub的更新拉到服务器 Step 3: 运行py文件 切到py文件所在路径 python $filename【PS：现在Network.py是有bug的，所以没run起来】 总结每次需要更新文件重复下述步骤： Step 1: 在本地修改文件，git add并git commit Step 2: 在本地git push到origin Step 3: 在服务器从origin中git clone / git pull Step 4: 在服务器切到py文件所在路径python $filename启动 附录 Git教程 GitHub教程 Git练习repo Git命令速查 Linux命令速查 使用GPU加速 使用tensorflow的代码： 1234# limit GPU memorytf_config = tf.ConfigProto() tf_config.gpu_options.allow_growth = Truewith tf.Session(config=tf_config) as sess: 使用keras的代码： 123456# limit GPU memoryimport keras.backend.tensorflow_backend as KTFconfig = tf.ConfigProto() config.gpu_options.allow_growth=True session = tf.Session(config=config)KTF.set_session(session)","link":"/2019/06/03/如何令本地代码在服务器端启动：以GitHub作中转/"},{"title":"\\#Testing\\# HTTP的通信监控和回放：Fiddler抓包与Socket发包","text":"利用Fiddler抓包和Socket发包，并用Curl脚本统计响应时间，主要分为以下四个部分： 工具的配置及工具的使用 截获、修改、发送数据包 统计网页和元素的响应时间 需注意事项及待改进事项 任务 部署类似Microsoft PetshopWeb应用基本实例，开发性能测试小工具能截获基于IE浏览器与Web服务器的交互的数据包，修改数据包（比如简化起见，修改要搜索的关键字），再把修改后的内容使用多线程的方式发送到服务器。统计请求每个网页上主要元素（gif,css等）需要的时间，以及请求整个网页的时间。 提示： 在获取数据包的过程中要根据HTTP请求的特点，从原始的数据包中过滤出HTTP的数据包。找到提交的“搜索的关键字”，将其替换成其它字符。 发送数据包使用Socket，可以参考网络编程的资料。 方法 截获数据包 修改数据包 发送数据包 记响应时间 手段 用Fiddler截获 用Python修改 用Socket发送 用Fiddler查看 验证 可用性 易用性 并发性 工具的配置安装工具Fiddler下载地址 导入证书 勾选解码 过滤保存手动 脚本 1234567891011121314151617if (oSession.fullUrl.Contains(\"baidu.com\")) { // for(var key in oSession.oRequest.headers) { // if('Referer' === key) { if(oSession.oRequest.headers['Referer'].indexOf(\"&amp;wd=\") != -1) { var fso; var file; fso = new ActiveXObject(\"Scripting.FileSystemObject\"); file = fso.OpenTextFile(\"E:\\\\MyPrograms\\\\fiddler_sessions\\\\Session\" + new Date().getTime() + \".txt\", 8 ,true, true); // file.writeLine(\"Request url: \" + oSession.url); file.writeLine(\"Request header:\" + \"\\n\" + oSession.oRequest.headers); // file.writeLine(\"Request body: \" + oSession.GetRequestBodyAsString()); file.writeLine(\"\\n\"); file.close(); } // } // }} 设置断点手动 命令 在左下角黑框框中输入命令 停止断点：bpu 开始断点：bpu $host 工具的使用Statistics Filters Inspectors Composer AutoResponder 截获数据包图形界面 使用图形界面或编程脚本应用过滤 点击左下角 Capturing或空白处 停止或开始截获数据包 使用Statistics查看时间，使用Inspectors查看内容 使用图形界面或编程脚本保存会话 修改数据包程序脚本对于手动保存的会话 123456789101112131415161718192021222324252627282930# 替换请求中的搜索字段def get_ref(file, cont): with open(file, encoding='utf-8') as f: lines = f.readlines() for line in lines: if 'Referer' in line: start = line.find(\"&amp;wd=\") end = line.find(\"&amp;rsv_pq=\") old_str = line[start+4:end] new_str = parse.quote(cont) line = line.replace(old_str, new_str) return line# 重新拼装需发送的报文def get_req(file, cont): msg = '' with open(file, encoding='utf-8') as f: lines = f.readlines() for line in lines: if 'GET' in line: line = 'GET ' + get_ref(file, cont)[9:-1] + ' HTTP/1.1' if 'Referer' in line: line = get_ref(file, cont) if 'Accept-Encoding' in line: continue line = line.strip('\\n') + '\\r\\n' msg += line msg = bytes(msg, encoding=\"utf8\") return msg 对于自动保存的会话 1234567891011121314151617181920212223242526272829303132# 替换请求中的搜索字段def get_ref(file, cont): with open(file, encoding='utf-16') as f: lines = f.readlines() for line in lines: if 'Referer' in line: start = line.find(\"&amp;wd=\") end = line.find(\"&amp;rsv_pq=\") old_str = line[start+4:end] new_str = parse.quote(cont) line = line.replace(old_str, new_str) return line# 重新拼装需发送的报文def get_req(file, cont): msg = '' with open(file, encoding='utf-16') as f: lines = f.readlines() for line in lines: if 'Request header:' in line: continue if 'GET' in line: line = 'GET ' + get_ref(file, cont)[9:-1] + ' HTTP/1.1' if 'Referer' in line: line = get_ref(file, cont) if 'Accept-Encoding' in line: continue line = line.strip('\\n') + '\\r\\n' msg += line msg = bytes(msg[:-4], encoding=\"utf8\") return msg 发送数据包Fiddler使用WebForms 使用图形界面或编程脚本应用过滤 使用图形界面或运行命令设置断点 在 对应报文A 的 Request WebForms内修改“搜索关键字” 点击 Break on Response 将修改后的 对应报文A 发送到Fiddler 在 对应报文B 的 Request WebForms内查看“搜索关键字” 点击 Run to Completion 将修改后的 对应报文B 发送到Server 使用Composer 保存会话Request请求头部 在记事本内修改“搜索关键字” 在Composer内发送请求报文 Socket 123456789101112131415161718192021222324252627282930if __name__ == '__main__': # 读取信息 file = input(\"file:\") cont = input(\"cont:\") # 套接字连接服务端 s = ssl.wrap_socket(socket.socket()) s.connect(('www.baidu.com', 443)) # 发送修改后的请求 s.send(get_req(file, cont)) # 缓存服务端的响应 buffer = [] while True: d = s.recv(1024) if d: buffer.append(d) else: break res = b''.join(buffer) # 客户端关闭套接字 s.close() # 保存响应 header, html = res.split(b'\\r\\n\\r\\n', 1) print(header.decode('utf-8')) with open(cont + '.html', 'wb') as f: f.write(html) 记响应时间FiddlerPyCurlUrllibRequest实例的演示 [仅使用Fiddler抓包、修改、发包](录屏链接To be continue…) [Fiddler抓包+Python修改+Socket发包](录屏链接To be continue…) 需注意事项报文格式 无论使手动还是脚本保存会话的请求报文，都需要注意每个属性是否以 \\r\\n 结尾，最后属性是否以 \\r\\n\\r\\n 结尾 遇到 HTTP 400 Bad Request 响应仔细检查报文格式是否正确 编码问题 注意保存会话的编码格式，手动保存使用编码格式 utf-8 ，脚本保存使用编码格式 utf-16 Socket发送报文和接受报文都需要二进制数据 Fiddler默认使用GZip格式压缩，在发送请求报文时为确保响应主题非乱码，应该去除 Accept-Encoding: gzip, deflate 这行属性 端口问题 Socket通信需要知道主机地址及其端口号 Fiddler Sessions或Inpectors可知主机地址及其端口号 保存的TCP报文（使用Wireshark）可知主机地址及其端口号 保存的HTTP/HTTPS报文（使用Fiddler）仅知主机地址，已知常用端口：HTTP为80/HTTPS为443 请求变化 Break on Response 和 Run to Completion 对应会话并不相同 待改进事项 优化过滤会话和替换内容脚本（正则表达式） 发送响应回浏览器（Socket向其它进程发报文） 持续化、多线程抓包、修改、发包（多线程编程）","link":"/2019/10/11/HTTP的通信监控和回放：Fiddler抓包与Socket发包/"},{"title":"\\#Configuration\\# 从零到壹：GitHub Pages + Hexo = Blog","text":"利用GitHub Pages+Hexo打造一个个人博客，主要分为以下五个部分： 环境准备 Environment 文件配置 Configuration 个性化 Customization 博客写作 Writing 双备份 Backup 环境准备 Environment安装Git + Github 安装Git部署插件: 1$ npm install hexo-deployer-git --save 安装Node.js 安装Node.js: Download | Node.js 检查是否安装成功: 12$ node -v$ npm -v 安装Hexo 安装Hexo: 1$ npm install -g hexo-cli 检查是否安装成功: 1$ hexo -v 初始化: 1$ hexo init blog 文件配置 Configuration本地运行123$ hexo clean # 删除缓存$ hexo g # 生成Hexo页面$ hexo s # 本地部署Hexo页面 远程运行123$ hexo clean # 删除缓存$ hexo g # 生成Hexo页面$ hexo d # 远程部署Hexo页面 基本配置/_config.yml 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: LotteWong # 个人博客显示名称subtitle: 在代码符号表象中避难。 # 个人博客副标题description: # 搜索引擎描述信息keywords: # 搜索引擎关键词author: LotteWong # 网站作者avatar: ./themes/icarus/source/images/favicon.ico # 网站头像language: en # 网站语言timezone: Asia/HongKong # 网站时区# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: http://yoursite.comroot: /permalink: :year/:month/:day/:title/permalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace: # Home page setting# path: Root path for your blogs index page. (default = '')# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: '' per_page: 10 order_by: -date # Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/plugins: # 设置个人博客插件theme: icarus # 设置个人博客主题# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git # 部署类型 repo: git@github.com:LotteWong/lottewong.github.io.git # 部署仓库 branch: master # 部署分支 个性化 Customization/themes/icarus/_config.yml 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234# Version of the Icarus theme that is currently usedversion: 2.3.0# Path or URL to the website's iconfavicon: /images/favicon.ico# Path or URL to RSS atom.xmlrss: # Path or URL to the website's logo to be shown on the left of the navigation bar or footerlogo: /images/logo.png# Open Graph metadata# https://hexo.io/docs/helpers.html#open-graphopen_graph: # Facebook App ID # fb_app_id: # Facebook Admin ID # fb_admins: # Twitter ID # twitter_id: # Twitter site # twitter_site: # Google+ profile link # google_plus: # Navigation bar link settingsnavbar: # Navigation bar menu links menu: Home: / Archives: /archives Categories: /categories Tags: /tags About: /about # Navigation bar links to be shown on the right # links: # Download on GitHub: # icon: fab fa-github # url: 'https://github.com/LotteWong'# Footer section link settingsfooter: # Links to be shown on the right of the footer section links: Github: icon: fab fa-github url: 'https://github.com/LotteWong' RSS: icon: fas fa-rss url: 'https://www.zhihu.com/people/lai-xiu-ping'# Article display settingsarticle: # Code highlight theme # https://github.com/highlightjs/highlight.js/tree/master/src/styles highlight: atom-one-light # Whether to show article thumbnail images thumbnail: true # Whether to show estimate article reading time readtime: true# Search plugin settings# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Searchsearch: # Name of the search plugin type: insight# Comment plugin settings# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Commentcomment: # Name of the comment plugin type: # Donation entries# https://ppoffice.github.io/hexo-theme-icarus/categories/Donation/donate: - # Donation entry name type: alipay # Qrcode image URL qrcode: '/images/alipay.png' - # Donation entry name type: wechat # Qrcode image URL qrcode: '/images/wechat.png' - # Donation entry name type: paypal # Paypal business ID or email address business: 'SuperGsama@outlook.com' # Currency code currency_code: USD - # Donation entry name # type: patreon # URL to the Patreon page # url: ''# Share plugin settings# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Shareshare: # Share plugin name type: # Sidebar settings.# Please be noted that a sidebar is only visible when it has at least one widgetsidebar: # left sidebar settings left: # Whether the left sidebar is sticky when page scrolls # https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/ sticky: false # right sidebar settings right: # Whether the right sidebar is sticky when page scrolls # https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/ sticky: false# Sidebar widget settings# https://ppoffice.github.io/hexo-theme-icarus/categories/Widgets/widgets: - # Widget name type: profile # Where should the widget be placed, left or right position: left # Author name to be shown in the profile widget author: LotteWong # Title of the author to be shown in the profile widget author_title: SCUT, Undergraduate # Author's current location to be shown in the profile widget location: Guangzhou, China # Path or URL to the avatar to be shown in the profile widget avatar: # Email address for the Gravatar to be shown in the profile widget gravatar: # Whether to show avatar image rounded or square avatar_rounded: false # Path or URL for the follow button follow_link: 'https://www.jianshu.com/u/80ee6b6f3418' # Links to be shown on the bottom of the profile widget social_links: Project: icon: fab fa-creative-commons url: 'https://github.com/scutse-man-month-myth/InkYear' Organization: icon: fab fa-creative-commons-by url: 'https://github.com/scutse-man-month-myth' Developer: icon: fab fa-github url: 'https://github.com/LotteWong' #Facebook: #icon: fab fa-facebook #url: 'https://facebook.com' #Twitter: #icon: fab fa-twitter #url: 'https://twitter.com' #Dribbble: #icon: fab fa-dribbble #url: 'https://dribbble.com' - # Widget name type: toc # Where should the widget be placed, left or right position: left - # Widget name type: links # Where should the widget be placed, left or right position: left # Links to be shown in the links widget links: Dart: 'https://dart.dev/' Flutter: 'https://flutter.dev/' - # Widget name type: category # Where should the widget be placed, left or right position: left - # Widget name type: tagcloud # Where should the widget be placed, left or right position: left - # Widget name type: recent_posts # Where should the widget be placed, left or right position: right - # Widget name type: archive # Where should the widget be placed, left or right position: right - # Widget name type: tag # Where should the widget be placed, left or right position: right# Other plugin settingsplugins: # Enable page animations animejs: true # Enable the lightGallery and Justified Gallery plugins # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/gallery-plugin/ gallery: true # Enable the Outdated Browser plugin # http://outdatedbrowser.com/ outdated-browser: true # Enable the MathJax plugin # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/mathjax-plugin/ mathjax: true # Show the back to top button on mobile devices back-to-top: true # Google Analytics plugin settings # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Google-Analytics google-analytics: # Google Analytics tracking id tracking_id: # Baidu Analytics plugin settings # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Baidu-Analytics baidu-analytics: # Baidu Analytics tracking id tracking_id: # Hotjar user feedback plugin # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Hotjar hotjar: # Hotjar site id site_id: # Show a loading progress bar at top of the page progressbar: true # Show the copy button in the highlighted code area clipboard: true # BuSuanZi site/page view counter # https://busuanzi.ibruce.info busuanzi: false# CDN provider settings# https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/speed-up-your-site-with-custom-cdn/providers: # Name or URL of the JavaScript and/or stylesheet CDN provider cdn: jsdelivr # Name or URL of the webfont CDN provider fontcdn: google # Name or URL of the webfont Icon CDN provider iconcdn: fontawesome 博客写作 Writing 默认 1$ hexo new \"blog title\" 自定义 1234567891011title: {{ blog title }}categories: {{ blog category }}tags:- {{ blog tag }}thumbnail: {{ blog thumbnail }}{{ Abstract }}&lt;!-- more --&gt;{{ Content }} 双备份 Backup Hexo备份: 12# master branch$ hexo d Src备份: 12345# dev branch$ git checkout dev$ git add --all$ git commit -m \"new blog\"$ git push origin dev 待办事项 Todos 对应图标 更多插件 绑定域名 更新外链 参考链接 References GitHub+Hexo 搭建个人网站详细教程 Hexo icarus","link":"/2019/06/02/从零到壹：GitHub Pages + Hexo = Blog/"}],"tags":[{"name":"Git","slug":"Git","link":"/tags/Git/"},{"name":"GitHub","slug":"GitHub","link":"/tags/GitHub/"},{"name":"SSH","slug":"SSH","link":"/tags/SSH/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"Fiddler","slug":"Fiddler","link":"/tags/Fiddler/"},{"name":"Curl","slug":"Curl","link":"/tags/Curl/"},{"name":"Socket","slug":"Socket","link":"/tags/Socket/"},{"name":"GitHub Pages","slug":"GitHub-Pages","link":"/tags/GitHub-Pages/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"}],"categories":[{"name":"Configuration","slug":"Configuration","link":"/categories/Configuration/"},{"name":"Testing","slug":"Testing","link":"/categories/Testing/"}]}
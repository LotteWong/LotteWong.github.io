<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LotteWong&#39;s Blog</title>
  
  <subtitle>在代码符号表象中避难。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lottewong.github.io/"/>
  <updated>2020-01-02T04:13:48.833Z</updated>
  <id>https://lottewong.github.io/</id>
  
  <author>
    <name>LotteWong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>#Sucks# 写在二零二零</title>
    <link href="https://lottewong.github.io/2020/01/01/%E5%86%99%E5%9C%A8%E4%BA%8C%E9%9B%B6%E4%BA%8C%E9%9B%B6/"/>
    <id>https://lottewong.github.io/2020/01/01/%E5%86%99%E5%9C%A8%E4%BA%8C%E9%9B%B6%E4%BA%8C%E9%9B%B6/</id>
    <published>2019-12-31T16:00:00.000Z</published>
    <updated>2020-01-02T04:13:48.833Z</updated>
    
    <content type="html"><![CDATA[<p>（（（无聊的吐槽与没多少意思的复读</p><hr><a id="more"></a><p>生活大概就是，起落落落。</p><p>说来写前端也快一个月，虽然以后大概率也不会再专门帮别人写了，但是这个过程还是有不少心得体会，比如理解需求、读懂架构、实现逻辑、保证质量和通过测试之类的。因为开发得比较随心所欲，换句话说，就是还有很多成长的空间，非常感谢实验室的师兄师姐没有嫌弃我这个小菜🐓，黄老师还即将迎来人生第一桶金 (?)</p><p>要说后悔到印象深刻的事情，除了在GY咕咕掉了信息竞赛，选大数据可能也是之一。无非就是不会也不那么感兴趣，每次先被数据处理套路一阵，然后对着数学公式和神经网络敲敲敲，Debug没有机器也要来个地久天长，还要盯着AB榜患得患失，实在是搞不来啦。虽然但是，学算法这半年来最大的收获就是学会如何心平气和地把一件事情真正做得又快又好（我却还没有</p><p>过去一年搞了不少副业，真正有营养的却不多，从C++写到Dart，从全栈写到云计算…明白一个人的精力其实很有限，什么都干 ≈ 什么都没干。就算开了n个repo，混了n个project，挂了n个title，只要面对 <code>Talk is cheap, show me the code</code> 也会沉默。当然广度优先学习也没什么不好，只不过是我算力太弱了罢。到了三年级就不可避免地想东想西，不能再像从前一样说干就干，要考虑沉默成本，要面对同伴焦虑，决定去哪搬砖也要小心翼翼，还随时在敏捷和投机的边缘试探。最后说服了自己还是保持刮刮乐的心态…（刮到了云计算还挺幸运的 误</p><p>虽然以上都是些无关痛痒的吐槽，生活也还有它的复杂和美好，诸如和很长一段时间被gaslight的自己和解啦、第一次当PM啦、去M$RA蹭吃蹭喝啦、再见好X友发展革命情谊啦、无疾而终地暗恋过啦云云，这种时候还是要感慨年轻真好滴嘻嘻 :P</p><p>以前觉得生活本质就是和西西弗斯神话一样的，相当虚无。现在也还是这么觉得，不过直觉上有趣的事情那么多，每天一点点也足够快乐。一般来说，新年之交讲的东西都不能信，就不继续一本正经胡说八道了，最后以小波作结吧：</p><blockquote><p>“那一天我二十一岁，在我一生的黄金时代。我有好多奢望。我想爱，想吃，还想再一瞬间变成天上半明半暗的云。后来我才知道，生活就是个缓慢受锤的过程，人一天天老下去，奢望也一天天消失，最后变得像挨了锤的牛一样。可是我过二十一岁生日时没有预见到这一点。我觉得自己会永远生猛下去，什么也锤不了我。”</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;（（（无聊的吐槽与没多少意思的复读&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="Sucks" scheme="https://lottewong.github.io/categories/Sucks/"/>
    
    
  </entry>
  
  <entry>
    <title>#Operation# WSL从入门到...(1) WSL 1 vs WSL 2</title>
    <link href="https://lottewong.github.io/2019/12/12/WSL%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0...(1)/"/>
    <id>https://lottewong.github.io/2019/12/12/WSL%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0...(1)/</id>
    <published>2019-12-11T23:00:21.000Z</published>
    <updated>2020-01-03T19:27:18.288Z</updated>
    
    <content type="html"><![CDATA[<p>对比<strong>适用于 Linux 的 Windows 子系统（Windows Subsystem for Linux, WSL）</strong>的两个版本 - <strong>WSL 1</strong> 和 <strong>WSL 2</strong> ，主要分为以下<strong>六个部分</strong>：</p><ul><li>前情提要</li><li>相关简介</li><li><strong>性能对比</strong></li><li><strong>架构对比</strong></li><li>几点总结</li><li>参考链接</li></ul><hr><a id="more"></a><h1><span id="目录-table-of-contents"><strong>目录 Table of Contents</strong></span></h1><!-- toc --><ul><li><a href="#前情提要"><strong>前情提要</strong></a></li><li><a href="#相关简介"><strong>相关简介</strong></a></li><li><a href="#性能对比"><strong>性能对比</strong></a><ul><li><a href="#file-system-performance">File system performance</a></li><li><a href="#full-system-call-compatibility">Full system call compatibility</a></li></ul></li><li><a href="#架构对比"><strong>架构对比</strong></a><ul><li><a href="#wsl-1">WSL 1</a></li><li><a href="#wsl-2">WSL 2</a><ul><li><a href="#linux-kernel">Linux Kernel</a></li><li><a href="#virtualization">Virtualization</a></li></ul></li></ul></li><li><a href="#几点总结"><strong>几点总结</strong></a></li><li><a href="#参考链接"><strong>参考链接</strong></a></li></ul><!-- tocstop --><hr><h2><span id="前情提要"><strong>前情提要</strong></span></h2><br><p><em>前阵网上冲浪围观 M$ Build 2019 的 WSL Session ，感受了一波  Microsoft ❤ Open Source，遂决定根据讲座和文档内容当一次复读机讨论一下 WSL ( 啊我的塑料英语_(:з)∠)_。</em></p><h2><span id="相关简介"><strong>相关简介</strong></span></h2><blockquote><p><strong>The Windows Subsystem for Linux</strong> lets developers run a GNU/Linux environment – including most command-line tools, utilities, and applications – directly on Windows, unmodified, without the overhead of a virtual machine.</p></blockquote><ul><li><strong>适用于 Linux 的 Windows 子系统（Windows Subsystem for Linux, WSL）</strong>可以简单地理解为在 Windows 上提供了运行 Linux 的平台。由于是 Subsystem ，与裸机装 Linux Distribution 相比，存在功能限制和性能打折的情况。</li></ul><blockquote><p>You can:</p><p>……</p><ul><li><p><strong>Invoke Windows applications</strong> using a Unix-like command-line shell.</p></li><li><p><strong>Invoke GNU/Linux applications</strong> on Windows.</p></li></ul><p>……</p></blockquote><ul><li>对于懒得开虚拟机or装双系统 + ECS渣渣级配置 + 非尊贵苹果用户而言， WSL 还是很有吸引力的 (虽然也很多坑。除了<strong>对 Linux 本身有需求</strong>外，上面提到的 <strong>Windows 和 Linux 互相invoke</strong> 也很有意思， WSL 因此大大降低了原本配置两个文件系统的繁琐程度。</li></ul><h2><span id="性能对比"><strong>性能对比</strong></span></h2><br><p><strong>WSL 2</strong> 相比 <strong>WSL 1</strong>，主要<strong>优化了访问文件系统的速度</strong>以及<strong>提供了更完整的系统调用接口</strong>。</p><h3><span id="file-system-performance">File system performance</span></h3><p><img src="/images/file_system_performance.png" alt="File system performance"></p><h3><span id="full-system-call-compatibility">Full system call compatibility</span></h3><p><img src="/images/full_system_call_compatibility.png" alt="Full system call compatibility"></p><h2><span id="架构对比"><strong>架构对比</strong></span></h2><h3><span id="wsl-1">WSL 1</span></h3><p><img src="/images/wsl1_architecture.png" alt="WSL 1 Architecture"></p><ul><li><p><strong>WSL 1</strong> 的大体思路是，在一台 Windows 主机上安装 Linux 发行版本，依赖<strong>中间层的驱动器</strong>完成 Linux Namespace 和 Windows Kernel 之间的<strong>通信捕获和指令翻译</strong>（比如 <code>path</code> 和 <code>flag</code> ），作用范围包括但不局限于系统调用、文件系统、权限管理和网络配置等。</p></li><li><p>这样的设计存在一些<strong>缺陷</strong>：</p><ol><li>某些翻译无可避免地需要付出时空代价，甚至由于两种内核的设计思想存在冲突而无法进行。</li><li>由于 Linux Kernel 更新得非常快，单靠 M$ Team 自己实现翻译，开发进度远远滞后于实际生产需求。</li></ol></li></ul><p>【更多详见 👉 <a href>WSL从入门到…(2) Dive into WSL 1 // 其实还没有写</a>】</p><h3><span id="wsl-2">WSL 2</span></h3><p><img src="/images/wsl2_architecture.png" alt="WSL 2 Architecture"></p><ul><li><p><strong>WSL 2</strong> 的大体思路是，<strong>开启 Hyper-V 功能</strong>，Windows Hyper-V Container（包含Windows Kernel和Windows Usermode）<strong>持续运行</strong>，Linux Hyper-V Container（包含Linux Kernel和Linux Usermode）<strong>随用随开</strong>，两者<strong>通过 Socket 通信</strong>。</p></li><li><p>这样的设计存在一些<strong>缺陷</strong>：</p><ol><li>需要处理器提供虚拟化选项，一些 arm64 架构的芯片不支持该功能。</li><li>Windows 开Hyper-V后将无法同时运行 VMware 和 Virtual Box 等工具，因为它们都要求独占 Hypervisor 才能够运行。</li><li>虚拟化伴随一系列一致性问题，比如权限管理和网络配置等等。</li></ol></li></ul><p>【更多详见 👉 <a href>WSL从入门到…(3) Dive into WSL 2 // 其实还没有写</a>】</p><h4><span id="linux-kernel">Linux Kernel</span></h4><ul><li><p>用 Linux Kernel 是为了<strong>解决 WSL 1 的遗留问题</strong>（<u>“Uses real Linux kernel for improved performance and perfect compatibility”</u>），翻译不好搞就“拿来主义”。 M$ 甚至为 WSL 2 定制了 Linux Kernel  (没想到吧.jpg</p><p><img src="/images/linux_kernel.png" alt="Shipping a Linux Kernel with Windows"> </p></li></ul><h4><span id="virtualization">Virtualization</span></h4><ul><li><p>要<strong>使两种内核能够共存</strong>最直接的思路就是使用虚拟化技术，而 WSL 2 采用了一种有别于传统虚拟机和新兴容器的新(?)方法 - Lightweight utility VM，其特点是集成度高（关联 Windows 服务）且只在运行时启动（否则被销毁回收）。</p><p><img src="/images/virtualization.png" alt="Lightweight utility VM"></p><ol><li><p>相比传统虚拟机，内存占用更小、启动速度更快以及可以同时运行更多实例。</p></li><li><p>相比新兴容器，基于 Hyper-V 面向 server 场景，本质还是 VM ，隔离得更彻底。</p></li></ol><p><img src="/images/hyper_v_container.png" alt="Hyper-V Containers"></p></li></ul><h2><span id="几点总结"><strong>几点总结</strong></span></h2><br><p>根据PM的说法， <strong>WSL 1</strong> 和 <strong>WSL 2</strong> 会并行维护，既适用于<strong>桌面版</strong>也可以运行在<strong>服务器</strong>。下面简单回顾两者的<strong>区别</strong>：</p><table><thead><tr><th></th><th>WSL 1</th><th>WSL 2</th></tr></thead><tbody><tr><td>核心技术</td><td>Pico provider drivers</td><td>Lightweight utility VM</td></tr><tr><td>同一实例（Container）</td><td>✓</td><td>✗</td></tr><tr><td>额外支持（虚拟化）</td><td>✗</td><td>✓</td></tr><tr><td>文件系统</td><td>访问慢</td><td>访问快</td></tr><tr><td>系统调用</td><td>缺少</td><td>完整</td></tr><tr><td>权限管理</td><td>相同</td><td>不同</td></tr><tr><td>网络配置</td><td>相同</td><td>不同</td></tr></tbody></table><br><p>后续两节将分别再深入介绍 <strong>WSL 1 和 WSL 2 的实现细节</strong>。那么我先占坑逃了（（（</p><h2><span id="参考链接"><strong>参考链接</strong></span></h2><ul><li><a href="https://mybuild.techcommunity.microsoft.com/sessions/77003" target="_blank" rel="noopener">The new Windows subsystem for Linux architecture: a deep dive</a></li><li><a href="https://docs.microsoft.com/en-us/windows/wsl/about" target="_blank" rel="noopener">Windows Subsystem for Linux Documentation</a></li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对比&lt;strong&gt;适用于 Linux 的 Windows 子系统（Windows Subsystem for Linux, WSL）&lt;/strong&gt;的两个版本 - &lt;strong&gt;WSL 1&lt;/strong&gt; 和 &lt;strong&gt;WSL 2&lt;/strong&gt; ，主要分为以下&lt;strong&gt;六个部分&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前情提要&lt;/li&gt;
&lt;li&gt;相关简介&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;性能对比&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;架构对比&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;几点总结&lt;/li&gt;
&lt;li&gt;参考链接&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="Operation" scheme="https://lottewong.github.io/categories/Operation/"/>
    
    
      <category term="Linux" scheme="https://lottewong.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>#Testing# HTTP的通信监控和回放：Fiddler抓包与Socket发包</title>
    <link href="https://lottewong.github.io/2019/10/15/HTTP%E7%9A%84%E9%80%9A%E4%BF%A1%E7%9B%91%E6%8E%A7%E5%92%8C%E5%9B%9E%E6%94%BE%EF%BC%9AFiddler%E6%8A%93%E5%8C%85%E4%B8%8ESocket%E5%8F%91%E5%8C%85/"/>
    <id>https://lottewong.github.io/2019/10/15/HTTP%E7%9A%84%E9%80%9A%E4%BF%A1%E7%9B%91%E6%8E%A7%E5%92%8C%E5%9B%9E%E6%94%BE%EF%BC%9AFiddler%E6%8A%93%E5%8C%85%E4%B8%8ESocket%E5%8F%91%E5%8C%85/</id>
    <published>2019-10-14T23:00:21.000Z</published>
    <updated>2020-01-02T07:38:11.350Z</updated>
    
    <content type="html"><![CDATA[<p>利用<strong>Fiddler</strong>抓包和<strong>Socket</strong>发包，并用<strong>Curl</strong>统计响应时间，主要分为以下<strong>四个部分</strong>：</p><ul><li>工具的配置及工具的使用</li><li><strong>截获、修改、发送数据包</strong></li><li><strong>统计网页和元素的响应时间</strong></li><li>需注意事项及待改进事项</li></ul><hr><a id="more"></a><h1><span id="目录-table-of-contents"><strong>目录 Table of Contents</strong></span></h1><!-- toc --><ul><li><a href="#任务-task"><strong>任务 Task</strong></a></li><li><a href="#工具的配置-configuration"><strong>工具的配置 Configuration</strong></a><ul><li><a href="#安装工具">安装工具</a></li><li><a href="#勾选解码">勾选解码</a></li><li><a href="#过滤保存">过滤保存</a></li><li><a href="#设置断点">设置断点</a></li></ul></li><li><a href="#工具的使用-usage"><strong>工具的使用 Usage</strong></a><ul><li><a href="#statistics">Statistics</a></li><li><a href="#filters">Filters</a></li><li><a href="#inspectors">Inspectors</a></li><li><a href="#composer">Composer</a></li><li><a href="#autoresponder">AutoResponder</a></li></ul></li><li><a href="#截获数据包-capture"><strong>截获数据包 Capture</strong></a><ul><li><a href="#图形界面">图形界面</a></li></ul></li><li><a href="#修改数据包-modify"><strong>修改数据包 Modify</strong></a><ul><li><a href="#程序脚本">程序脚本</a></li></ul></li><li><a href="#发送数据包-send"><strong>发送数据包 Send</strong></a><ul><li><a href="#fiddler">Fiddler</a></li><li><a href="#socket">Socket</a></li></ul></li><li><a href="#记响应时间-analyses"><strong>记响应时间 Analyses</strong></a><ul><li><a href="#fiddler-1">Fiddler</a></li><li><a href="#curl">Curl</a></li></ul></li><li><a href="#需注意事项-notices"><strong>需注意事项 Notices</strong></a></li><li><a href="#待改进事项-todos"><strong>待改进事项 Todos</strong></a></li></ul><!-- tocstop --><hr><h2><span id="任务-task"><strong>任务 Task</strong></span></h2><blockquote><p>部署类似Microsoft PetshopWeb应用基本实例，开发性能测试小工具能截获基于IE浏览器与Web服务器的交互的数据包，修改数据包（比如简化起见，修改要搜索的关键字），再把修改后的内容使用多线程的方式发送到服务器。统计请求每个网页上主要元素（gif,css等）需要的时间，以及请求整个网页的时间。</p><p>提示：</p><ol><li><p>在获取数据包的过程中要根据HTTP请求的特点，从原始的数据包中过滤出HTTP的数据包。找到提交的“搜索的关键字”，将其替换成其它字符。</p></li><li><p>发送数据包使用Socket，可以参考网络编程的资料。</p></li></ol></blockquote><p><img src="/images/fiddler_socket.png" alt="Flowchart"></p><h2><span id="工具的配置-configuration"><strong>工具的配置 Configuration</strong></span></h2><h3><span id="安装工具">安装工具</span></h3><p><a href="https://www.telerik.com/fiddler" target="_blank" rel="noopener">Fiddler下载地址</a></p><p><img src="/images/decrypt_https_1.png" alt="Decrypt to capture Https"></p><p><img src="/images/decrypt_https_2.png" alt="Decrypt to capture Https"></p><h3><span id="勾选解码">勾选解码</span></h3><p><img src="/images/encode_decode.png" alt="GZip encoding is default in Fiddler"></p><h3><span id="过滤保存">过滤保存</span></h3><ol><li>手动</li></ol><p><img src="/images/filters.png" alt="Set filters"></p><p><img src="/images/save_sessions.png" alt="Save sessions"></p><ol start="2"><li>脚本</li></ol><p><img src="/images/customize_rules_1.png" alt="Customize Rules"></p><p><img src="/images/customize_rules_2.png" alt="Edit scripts"></p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> (oSession.fullUrl.Contains(<span class="hljs-string">"baidu.com"</span>)) &#123;</span><br><span class="line">    <span class="hljs-comment">// for(var key in oSession.oRequest.headers) &#123;</span></span><br><span class="line">        <span class="hljs-comment">// if('Referer' === key) &#123;</span></span><br><span class="line">            <span class="hljs-keyword">if</span>(oSession.oRequest.headers[<span class="hljs-string">'Referer'</span>].indexOf(<span class="hljs-string">"&amp;wd="</span>) != <span class="hljs-number">-1</span>) &#123;</span><br><span class="line">                <span class="hljs-keyword">var</span> fso;</span><br><span class="line">                <span class="hljs-keyword">var</span> file;</span><br><span class="line">                fso = <span class="hljs-keyword">new</span> ActiveXObject(<span class="hljs-string">"Scripting.FileSystemObject"</span>);</span><br><span class="line">                file = fso.OpenTextFile(<span class="hljs-string">"E:\\MyPrograms\\fiddler_sessions\\Session"</span> + <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getTime() + <span class="hljs-string">".txt"</span>, <span class="hljs-number">8</span> ,<span class="hljs-literal">true</span>, <span class="hljs-literal">true</span>);</span><br><span class="line">                <span class="hljs-comment">// file.writeLine("Request url: " + oSession.url);</span></span><br><span class="line">                file.writeLine(<span class="hljs-string">"Request header:"</span> + <span class="hljs-string">"\n"</span> + oSession.oRequest.headers);</span><br><span class="line">                <span class="hljs-comment">// file.writeLine("Request body: " + oSession.GetRequestBodyAsString());</span></span><br><span class="line">                file.writeLine(<span class="hljs-string">"\n"</span>);</span><br><span class="line">                file.close();</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="hljs-comment">// &#125;</span></span><br><span class="line">    <span class="hljs-comment">// &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="设置断点">设置断点</span></h3><ol><li>手动</li></ol><p><img src="/images/breakpoints.png" alt="Set Breakpoints"></p><ol start="2"><li>命令</li></ol><ul><li>在左下角黑框框中输入命令<ul><li>停止断点：<code>bpu</code></li><li>开始断点：<code>bpu $host</code></li></ul></li></ul><h2><span id="工具的使用-usage"><strong>工具的使用 Usage</strong></span></h2><h3><span id="statistics">Statistics</span></h3><p><img src="/images/statistics.png" alt="Statistics"></p><h3><span id="filters">Filters</span></h3><p><img src="/images/filters.png" alt="Filters"></p><h3><span id="inspectors">Inspectors</span></h3><p><img src="/images/inspectors.png" alt="Inspectors"></p><h3><span id="composer">Composer</span></h3><p><img src="/images/composer.png" alt="Composer"></p><h3><span id="autoresponder">AutoResponder</span></h3><p><img src="/images/auto_responder.png" alt="AutoResponder"></p><h2><span id="截获数据包-capture"><strong>截获数据包 Capture</strong></span></h2><h3><span id="图形界面">图形界面</span></h3><ul><li>使用图形界面或编程脚本应用过滤</li><li>点击左下角 <code>Capturing或空白处</code> 停止或开始截获数据包</li><li>使用Statistics查看时间，使用Inspectors查看内容</li><li>使用图形界面或编程脚本保存会话</li></ul><h2><span id="修改数据包-modify"><strong>修改数据包 Modify</strong></span></h2><h3><span id="程序脚本">程序脚本</span></h3><ol><li><p>对于手动保存的会话</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 替换请求中的搜索字段</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_ref</span><span class="hljs-params">(file, cont)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">with</span> open(file, encoding=<span class="hljs-string">'utf-8'</span>) <span class="hljs-keyword">as</span> f:</span><br><span class="line">        lines = f.readlines()</span><br><span class="line">        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> lines:</span><br><span class="line">            <span class="hljs-keyword">if</span> <span class="hljs-string">'Referer'</span> <span class="hljs-keyword">in</span> line:</span><br><span class="line">                start = line.find(<span class="hljs-string">"&amp;wd="</span>)</span><br><span class="line">                end = line.find(<span class="hljs-string">"&amp;rsv_pq="</span>)</span><br><span class="line">                old_str = line[start+<span class="hljs-number">4</span>:end]</span><br><span class="line">                new_str = parse.quote(cont)</span><br><span class="line">                line = line.replace(old_str, new_str)</span><br><span class="line">                <span class="hljs-keyword">return</span> line</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 重新拼装需发送的报文</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_req</span><span class="hljs-params">(file, cont)</span>:</span></span><br><span class="line">    msg = <span class="hljs-string">''</span></span><br><span class="line">    <span class="hljs-keyword">with</span> open(file, encoding=<span class="hljs-string">'utf-8'</span>) <span class="hljs-keyword">as</span> f:</span><br><span class="line">        lines = f.readlines()</span><br><span class="line">        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> lines:</span><br><span class="line">            <span class="hljs-keyword">if</span> <span class="hljs-string">'GET'</span> <span class="hljs-keyword">in</span> line:</span><br><span class="line">                line = <span class="hljs-string">'GET '</span> + get_ref(file, cont)[<span class="hljs-number">9</span>:<span class="hljs-number">-1</span>] + <span class="hljs-string">' HTTP/1.1'</span></span><br><span class="line">            <span class="hljs-keyword">if</span> <span class="hljs-string">'Referer'</span> <span class="hljs-keyword">in</span> line:</span><br><span class="line">                line = get_ref(file, cont)</span><br><span class="line">            <span class="hljs-keyword">if</span> <span class="hljs-string">'Accept-Encoding'</span> <span class="hljs-keyword">in</span> line:</span><br><span class="line">                <span class="hljs-keyword">continue</span></span><br><span class="line">            line = line.strip(<span class="hljs-string">'\n'</span>) + <span class="hljs-string">'\r\n'</span></span><br><span class="line">            msg += line</span><br><span class="line">        msg = bytes(msg, encoding=<span class="hljs-string">"utf8"</span>)</span><br><span class="line">        <span class="hljs-keyword">return</span> msg</span><br></pre></td></tr></table></figure></li><li><p>对于自动保存的会话</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 替换请求中的搜索字段</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_ref</span><span class="hljs-params">(file, cont)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">with</span> open(file, encoding=<span class="hljs-string">'utf-16'</span>) <span class="hljs-keyword">as</span> f:</span><br><span class="line">        lines = f.readlines()</span><br><span class="line">        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> lines:</span><br><span class="line">            <span class="hljs-keyword">if</span> <span class="hljs-string">'Referer'</span> <span class="hljs-keyword">in</span> line:</span><br><span class="line">                start = line.find(<span class="hljs-string">"&amp;wd="</span>)</span><br><span class="line">                end = line.find(<span class="hljs-string">"&amp;rsv_pq="</span>)</span><br><span class="line">                old_str = line[start+<span class="hljs-number">4</span>:end]</span><br><span class="line">                new_str = parse.quote(cont)</span><br><span class="line">                line = line.replace(old_str, new_str)</span><br><span class="line">                <span class="hljs-keyword">return</span> line</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 重新拼装需发送的报文</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_req</span><span class="hljs-params">(file, cont)</span>:</span></span><br><span class="line">    msg = <span class="hljs-string">''</span></span><br><span class="line">    <span class="hljs-keyword">with</span> open(file, encoding=<span class="hljs-string">'utf-16'</span>) <span class="hljs-keyword">as</span> f:</span><br><span class="line">        lines = f.readlines()</span><br><span class="line">        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> lines:</span><br><span class="line">            <span class="hljs-keyword">if</span> <span class="hljs-string">'Request header:'</span> <span class="hljs-keyword">in</span> line:</span><br><span class="line">                <span class="hljs-keyword">continue</span></span><br><span class="line">            <span class="hljs-keyword">if</span> <span class="hljs-string">'GET'</span> <span class="hljs-keyword">in</span> line:</span><br><span class="line">                line = <span class="hljs-string">'GET '</span> + get_ref(file, cont)[<span class="hljs-number">9</span>:<span class="hljs-number">-1</span>] + <span class="hljs-string">' HTTP/1.1'</span></span><br><span class="line">            <span class="hljs-keyword">if</span> <span class="hljs-string">'Referer'</span> <span class="hljs-keyword">in</span> line:</span><br><span class="line">                line = get_ref(file, cont)</span><br><span class="line">            <span class="hljs-keyword">if</span> <span class="hljs-string">'Accept-Encoding'</span> <span class="hljs-keyword">in</span> line:</span><br><span class="line">                <span class="hljs-keyword">continue</span></span><br><span class="line">            line = line.strip(<span class="hljs-string">'\n'</span>) + <span class="hljs-string">'\r\n'</span></span><br><span class="line">            msg += line</span><br><span class="line">        msg = bytes(msg[:<span class="hljs-number">-4</span>], encoding=<span class="hljs-string">"utf8"</span>)</span><br><span class="line">        <span class="hljs-keyword">return</span> msg</span><br></pre></td></tr></table></figure></li></ol><h2><span id="发送数据包-send"><strong>发送数据包 Send</strong></span></h2><h3><span id="fiddler">Fiddler</span></h3><ol><li>使用WebForms</li></ol><ul><li>使用图形界面或编程脚本应用过滤</li><li>使用图形界面或运行命令设置断点</li><li>在 <code>对应报文A</code> 的 <code>Request WebForms</code>内修改“搜索关键字”</li><li>点击 <code>Break on Response</code> 将修改后的 <code>对应报文A</code> 发送到Fiddler</li><li>在 <code>对应报文B</code> 的 <code>Request WebForms</code>内查看“搜索关键字”</li><li>点击 <code>Run to Completion</code> 将修改后的 <code>对应报文B</code> 发送到Server</li></ul><ol start="2"><li>使用Composer</li></ol><ul><li>保存会话Request请求头部</li><li>在记事本内修改“搜索关键字”</li><li>在Composer内发送请求报文</li></ul><h3><span id="socket">Socket</span></h3>  <figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:</span><br><span class="line">    <span class="hljs-comment"># 读取信息</span></span><br><span class="line">    file = input(<span class="hljs-string">"file:"</span>)</span><br><span class="line">    cont = input(<span class="hljs-string">"cont:"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 套接字连接服务端</span></span><br><span class="line">    s = ssl.wrap_socket(socket.socket())</span><br><span class="line">    s.connect((<span class="hljs-string">'www.baidu.com'</span>, <span class="hljs-number">443</span>))</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 发送修改后的请求</span></span><br><span class="line">    s.send(get_req(file, cont))</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 缓存服务端的响应</span></span><br><span class="line">    buffer = []</span><br><span class="line">    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:</span><br><span class="line">        d = s.recv(<span class="hljs-number">1024</span>)</span><br><span class="line">        <span class="hljs-keyword">if</span> d:</span><br><span class="line">            buffer.append(d)</span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            <span class="hljs-keyword">break</span></span><br><span class="line">    res = <span class="hljs-string">b''</span>.join(buffer)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 客户端关闭套接字</span></span><br><span class="line">    s.close()</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># 保存响应</span></span><br><span class="line">    header, html = res.split(<span class="hljs-string">b'\r\n\r\n'</span>, <span class="hljs-number">1</span>)</span><br><span class="line">    print(header.decode(<span class="hljs-string">'utf-8'</span>))</span><br><span class="line">    <span class="hljs-keyword">with</span> open(cont + <span class="hljs-string">'.html'</span>, <span class="hljs-string">'wb'</span>) <span class="hljs-keyword">as</span> f:</span><br><span class="line">        f.write(html)</span><br></pre></td></tr></table></figure><h2><span id="记响应时间-analyses"><strong>记响应时间 Analyses</strong></span></h2><h3><span id="fiddler">Fiddler</span></h3><h3><span id="curl">Curl</span></h3><h2><span id="需注意事项-notices"><strong>需注意事项 Notices</strong></span></h2><ol><li>报文格式</li></ol><ul><li>无论使手动还是脚本保存会话的请求报文，都需要注意每个属性是否以 <code>\r\n</code>  结尾，最后属性是否以 <code>\r\n\r\n</code> 结尾</li><li>遇到 <code>HTTP 400 Bad Request</code> 响应仔细检查报文格式是否正确</li></ul><ol start="2"><li>编码问题</li></ol><ul><li>注意保存会话的编码格式，手动保存使用编码格式 <code>utf-8</code> ，脚本保存使用编码格式 <code>utf-16</code></li><li>Socket发送报文和接受报文都需要二进制数据</li><li>Fiddler默认使用GZip格式压缩，在发送请求报文时为确保响应主题非乱码，应该去除 <code>Accept-Encoding: gzip, deflate</code> 这行属性</li></ul><ol start="3"><li>端口问题</li></ol><ul><li>Socket通信需要知道主机地址及其端口号<ul><li>Fiddler Sessions或Inpectors可知主机地址及其端口号</li><li>保存的TCP报文（使用Wireshark）可知主机地址及其端口号</li><li>保存的HTTP/HTTPS报文（使用Fiddler）仅知主机地址，已知常用端口：HTTP为80/HTTPS为443</li></ul></li></ul><ol start="4"><li>请求变化</li></ol><ul><li><code>Break on Response</code> 和 <code>Run to Completion</code> 对应会话并不相同</li></ul><h2><span id="待改进事项-todos"><strong>待改进事项 Todos</strong></span></h2><ul><li>优化过滤会话和替换内容脚本：正则表达式</li><li>发送响应回浏览器：Socket向其它进程发报文</li><li>持续化、多线程抓包、修改、发包：多线程编程</li><li>实现替代Fiddler的代理服务器：利用Python第三方代理库</li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;利用&lt;strong&gt;Fiddler&lt;/strong&gt;抓包和&lt;strong&gt;Socket&lt;/strong&gt;发包，并用&lt;strong&gt;Curl&lt;/strong&gt;统计响应时间，主要分为以下&lt;strong&gt;四个部分&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工具的配置及工具的使用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;截获、修改、发送数据包&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;统计网页和元素的响应时间&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;需注意事项及待改进事项&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="Testing" scheme="https://lottewong.github.io/categories/Testing/"/>
    
    
      <category term="Fiddler" scheme="https://lottewong.github.io/tags/Fiddler/"/>
    
      <category term="Curl" scheme="https://lottewong.github.io/tags/Curl/"/>
    
      <category term="Socket" scheme="https://lottewong.github.io/tags/Socket/"/>
    
  </entry>
  
  <entry>
    <title>#Cloud Computing# LinuxOne上的Docker初体验</title>
    <link href="https://lottewong.github.io/2019/06/18/LinuxOne%E4%B8%8A%E7%9A%84Docker%E5%AE%9E%E8%B7%B5/"/>
    <id>https://lottewong.github.io/2019/06/18/LinuxOne%E4%B8%8A%E7%9A%84Docker%E5%AE%9E%E8%B7%B5/</id>
    <published>2019-06-17T23:00:21.000Z</published>
    <updated>2020-01-02T08:40:58.173Z</updated>
    
    <content type="html"><![CDATA[<p>在<strong>LinuxOne</strong>上利用<strong>Docker</strong>部署应用与服务，主要分为以下<strong>五个部分</strong>：</p><ul><li>环境准备 Environment</li><li><strong>Docker原理 Theory</strong></li><li><strong>Docker使用 Usage</strong></li><li><strong>Docker实战 Practice</strong></li><li>注意事项 Notices</li></ul><hr><a id="more"></a><h1><span id="目录-table-of-contents"><strong>目录 Table of Contents</strong></span></h1><!-- toc --><ul><li><a href="#环境准备-environment"><strong>环境准备 Environment</strong></a><ul><li><a href="#申请github账号并配置好本地git">申请Github账号并配置好本地Git</a></li><li><a href="#申请ibm-id账号并开通开发者账号">申请IBM ID账号并开通开发者账号</a></li><li><a href="#申请ibm-linuxone账号">申请IBM LinuxOne账号</a><ul><li><a href="#virtual-machine">Virtual Machine</a></li><li><a href="#private-cloud">Private Cloud</a></li></ul></li><li><a href="#安装nodejs环境">安装Node.js环境</a></li><li><a href="#安装ssh登录工具">安装SSH登录工具</a></li></ul></li><li><a href="#docker原理-theory"><strong>Docker原理 Theory</strong></a><ul><li><a href="#工作流程">工作流程</a></li><li><a href="#名词辨析">名词辨析</a></li></ul></li><li><a href="#docker使用-usage"><strong>Docker使用 Usage</strong></a><ul><li><a href="#安装">安装</a></li><li><a href="#命令">命令</a></li></ul></li><li><a href="#docker实战-practice"><strong>Docker实战 Practice</strong></a><ul><li><a href="#切换权限和路径配置用户习惯">切换权限和路径，配置用户习惯</a></li><li><a href="#安装并运行-websphere-liberty练习使用docker-run">安装并运行 WebSphere Liberty<strong>（练习使用docker run）</strong></a></li><li><a href="#安装并运行-wordpress练习使用docker-compose-up">安装并运行 WordPress<strong>（练习使用docker-compose up）</strong></a></li><li><a href="#安装并运行-todo-app熟悉mean-stack-docker架构">安装并运行 Todo App<strong>（熟悉MEAN Stack + Docker架构）</strong></a></li><li><a href="#todo-app前端插入数据-后端处理数据-数据库查数据熟悉mean-stack-docker前后端数据库交互">Todo App前端插入数据、后端处理数据、数据库查数据<strong>（熟悉MEAN Stack + Docker前后端数据库交互）</strong></a></li><li><a href="#本地部署金融微服务熟悉localhost-micro-services模式">本地部署金融微服务<strong>（熟悉Localhost → Micro-services模式）</strong></a></li><li><a href="#远程部署金融微服务熟悉docker-micro-services模式">远程部署金融微服务<strong>（熟悉Docker → Micro-services模式）</strong></a></li><li><a href="#云端部署金融微服务熟悉cloud-micro-services模式">云端部署金融微服务<strong>（熟悉Cloud → Micro-services模式）</strong></a></li></ul></li><li><a href="#注意事项-notices"><strong>注意事项 Notices</strong></a></li></ul><!-- tocstop --><hr><h2><span id="环境准备-environment"><strong>环境准备 Environment</strong></span></h2><h3><span id="申请github账号并配置好本地git">申请Github账号并配置好本地Git</span></h3><ul><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">廖雪峰Git教程</a></li></ul><h3><span id="申请ibm-id账号并开通开发者账号">申请IBM ID账号并开通开发者账号</span></h3><blockquote><p><em>该步骤主要提供接口权限</em></p></blockquote><ol><li><p>Register IBM ID （统一邮箱）</p></li><li><p>Create an API Developer Portal account （统一邮箱）</p></li><li><p>Apps</p><ul><li><p>Create new App</p></li><li><p>Configure the App: </p><ul><li>Title: $TITLE</li></ul></li><li><p>Sumbit</p><ul><li>Client ID</li><li>Client Secret</li></ul></li></ul></li><li><p>API Products</p><ul><li>Use banking API<ul><li>Subscribe Default Plan</li><li>Select Previous App</li></ul></li><li>Subscribe</li></ul></li></ol><h3><span id="申请ibm-linuxone账号">申请IBM LinuxOne账号</span></h3><blockquote><p><em>该步骤主要提供部署环境</em></p></blockquote><h4><span id="virtual-machine">Virtual Machine</span></h4><ol><li><p>Login</p></li><li><p>Virtual Services</p><ul><li><p>Manage Instances</p></li><li><p>Create Instances</p></li><li><p>Configure the Instance</p><ul><li>Type: General purpose VM</li><li>Instance Name: $INSTANCE_NAME</li><li>Instance Description: $INSTANCE_DESCRITION</li><li>Image: RHEL7.6</li><li>SSH Key Pairs: Create → Save → Select → Create</li></ul></li><li><p>Check the Instance</p><ul><li>Status: Active</li><li>Linux User: linux1</li><li>IP Address: 148.100.xxx.xxx</li></ul></li></ul></li></ol><h4><span id="private-cloud">Private Cloud</span></h4><ol><li><p>Login</p></li><li><p>Catalog</p><ul><li>openmplbank</li></ul></li><li><p>Configure</p><ul><li>Input Release name</li><li>Select Target Namespace</li></ul></li><li><p>Install</p></li><li><p>View Helm Release</p><ul><li>Deployment<ul><li>AVAILABLE = 1</li></ul></li><li>Launch</li></ul></li></ol><h3><span id="安装nodejs环境">安装Node.js环境</span></h3><ol><li><p>安装Node.js: </p><p><a href="https://link.zhihu.com/?target=https%3A//nodejs.org/en/download/" target="_blank" rel="noopener">Download | Node.js</a></p></li><li><p>检查是否安装成功:</p> <figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure></li></ol><h3><span id="安装ssh登录工具">安装SSH登录工具</span></h3><ul><li>Windows：可选<a href="https://www.zybuluo.com/abelsu7/note/1476987?tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noopener">PuTTY</a>或<a href="https://lottewong.github.io/2019/05/17/_files/xshell连接linux1.doc">Xshell</a>或<a href="https://docs.microsoft.com/en-us/windows/wsl/faq" target="_blank" rel="noopener">WSL</a></li><li>Linux：<code>ssh -i /path/to/key/keyname.pem linuxusername@serveripaddress</code></li></ul><h2><span id="docker原理-theory"><strong>Docker原理 Theory</strong></span></h2><h3><span id="工作流程">工作流程</span></h3><p><img src="/images/docker_flowchart.png" alt="Flowchart"></p><h3><span id="名词辨析">名词辨析</span></h3><table><thead><tr><th align="left">概念</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">Docker 镜像(Images)</td><td align="left">Docker镜像是用于创建Docker容器的模板。</td></tr><tr><td align="left">Docker 容器(Container)</td><td align="left">Docker容器是独立运行的一个或一组应用。</td></tr><tr><td align="left">Docker 客户端(Client)</td><td align="left">Docker客户端通过命令行或者其他工具使用Docker API，与Docker的守护进程通信。</td></tr><tr><td align="left">Docker 主机(Host)</td><td align="left">Docker主机是一个物理或者虚拟的机器用于执行Docker守护进程和容器。</td></tr></tbody></table><h2><span id="docker使用-usage"><strong>Docker使用 Usage</strong></span></h2><h3><span id="安装">安装</span></h3><ol><li><p>安装docker</p> <figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 下载Docker归档包</span></span><br><span class="line"></span><br><span class="line">wget ftp://ftp.unicamp.br/pub/linuxpatch/s390x/redhat/rhel7.3/docker-17.05.0-ce-rhel7.3-20170523.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 解压Docker归档包</span></span><br><span class="line"></span><br><span class="line">tar -xzvf docker-17.05.0-ce-rhel7.3-20170523.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 迁移Docker归档包</span></span><br><span class="line"><span class="hljs-comment"># !!! 这里直接cp到/usr/bin就好，因为/usr/local/bin不在PATH环境变量里 !!!</span></span><br><span class="line"></span><br><span class="line">cp docker-17.05.0-ce-rhel7.3-20170523/docker* /usr/bin/</span><br></pre></td></tr></table></figure></li><li><p>安装docker-compose</p> <figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 查看python-setuptools</span></span><br><span class="line"></span><br><span class="line">yum info python-setuptools</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 安装python-setuptools</span></span><br><span class="line"></span><br><span class="line">yum install -y python-setuptools</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 安装pip</span></span><br><span class="line"></span><br><span class="line">easy_install pip</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 网速过慢的话先禁用掉 IPv6</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">echo</span> 1 &gt; /proc/sys/net/ipv6/conf/all/disable_ipv6</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 升级backports.ssl_match_hostname</span></span><br><span class="line"></span><br><span class="line">pip install backports.ssl_match_hostname --upgrade --ignore-installed</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 先安装依赖，不然会报错</span></span><br><span class="line"></span><br><span class="line">yum install python-devel libffi-devel</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 安装docker-compose</span></span><br><span class="line"></span><br><span class="line">pip install docker-compose==1.13.0</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 查看docker-compose安装情况和版本信息</span></span><br><span class="line"></span><br><span class="line">docker-compose version</span><br></pre></td></tr></table></figure></li></ol><h3><span id="命令">命令</span></h3><ul><li><p>后台启动daemon进程</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># -g 设置Docker Daemon运行时的根目录</span></span><br><span class="line"><span class="hljs-comment"># &amp; 放在命令后面表示设置此进程为后台进程</span></span><br><span class="line"></span><br><span class="line">docker daemon -g /<span class="hljs-built_in">local</span>/docker/lib &amp;</span><br></pre></td></tr></table></figure></li><li><p>命令查看docker信息</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 查看当前机器docker版本老旧</span></span><br><span class="line"></span><br><span class="line">docker version</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 检查后台有无docker进程运行</span></span><br><span class="line"></span><br><span class="line">ps aux | grep docker</span><br></pre></td></tr></table></figure></li><li><p>docker镜像处理</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 查看所有镜像</span></span><br><span class="line"></span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 拉取远程镜像</span></span><br><span class="line"></span><br><span class="line">docker image pull repository:tag</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 构建本地镜像</span></span><br><span class="line"></span><br><span class="line">docker build -t <span class="hljs-string">"repository:tag"</span> ./</span><br></pre></td></tr></table></figure></li><li><p>docker容器处理</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 查看所有容器</span></span><br><span class="line"></span><br><span class="line">docker ps</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 创建运行容器</span></span><br><span class="line"></span><br><span class="line">docker run image</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 停止运行容器</span></span><br><span class="line"></span><br><span class="line">docker stop container</span><br></pre></td></tr></table></figure></li><li><p>docker服务处理</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 查看所有服务</span></span><br><span class="line"></span><br><span class="line">docker-compose ps</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 创建运行服务</span></span><br><span class="line"></span><br><span class="line">docker-compose up</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 停止运行服务</span></span><br><span class="line"></span><br><span class="line">docker-compose down</span><br></pre></td></tr></table></figure></li><li><p>docker build</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># -t 在新容器内指定一个伪终端或终端</span></span><br><span class="line"></span><br><span class="line">docker build -t <span class="hljs-string">"repository:tag"</span> ./</span><br></pre></td></tr></table></figure></li><li><p>docker run</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># -d 开启daemon模式</span></span><br><span class="line"><span class="hljs-comment"># -i 允许你对容器内的标准输入 (STDIN) 进行交互</span></span><br><span class="line"><span class="hljs-comment"># -p 指定端口映射规则</span></span><br><span class="line"></span><br><span class="line">docker run -d -i -p ipadress1:port1/protocal:ipadress2:port2/protocal repository:tag</span><br></pre></td></tr></table></figure></li><li><p>docker-compose up</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># -d 开启daemon模式</span></span><br><span class="line"><span class="hljs-comment"># 端口映射和镜像来源都写在了.yml配置文件</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure></li><li><p>docker exec</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># -i 允许你对容器内的标准输入 (STDIN) 进行交互</span></span><br><span class="line"><span class="hljs-comment"># -t 在新容器内指定一个伪终端或终端</span></span><br><span class="line"></span><br><span class="line">docker <span class="hljs-built_in">exec</span> –it container bash</span><br></pre></td></tr></table></figure></li></ul><h2><span id="docker实战-practice"><strong>Docker实战 Practice</strong></span></h2><h3><span id="切换权限和路径配置用户习惯">切换权限和路径，配置用户习惯</span></h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 切为根用户，否则没有权限</span></span><br><span class="line"></span><br><span class="line">sudo su</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 切到家目录，否则难找文件</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">cd</span> ~</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># RHEL 7.6已经自带安装了VIM 7.4，启动命令是vi，习惯用vim命令的同学可以先设置一下别名[当前生效]</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">alias</span> vim=<span class="hljs-string">'vi'</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># RHEL 7.6已经自带安装了VIM 7.4，启动命令是vi，习惯用vim命令的同学可以先设置一下别名[永久生效]</span></span><br><span class="line"><span class="hljs-comment"># !!! 可以将alias vim='vi'加到~/.bashrc中 !!!</span></span><br><span class="line"><span class="hljs-built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><h3><span id="安装并运行-websphere-liberty练习使用docker-run">安装并运行 WebSphere Liberty<strong>（练习使用docker run）</strong></span></h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 手动拉取websphere-liberty镜像到本地</span></span><br><span class="line"></span><br><span class="line">docker image pull s390x/websphere-liberty:webProfile7</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 后台运行容器，并指定端口映射规则</span></span><br><span class="line"></span><br><span class="line">docker run -d -p 80:9080 -p 443:9443 s390x/websphere-liberty:webProfile7</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 浏览器访问http://[LinuxOne Host IP]，即可看到WebSphere Liberty的界面</span></span><br></pre></td></tr></table></figure><h3><span id="安装并运行-wordpress练习使用docker-compose-up">安装并运行 WordPress<strong>（练习使用docker-compose up）</strong></span></h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 创建docker-compose.yml</span></span><br><span class="line"></span><br><span class="line">vim docker-compose.yml</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 编辑docker-compose.yml</span></span><br><span class="line"></span><br><span class="line">version: <span class="hljs-string">'2'</span></span><br><span class="line">services:</span><br><span class="line">  wordpress:</span><br><span class="line">    image: s390x/wordpress</span><br><span class="line">  ports:</span><br><span class="line">    - 8080:80 <span class="hljs-comment"># 将本地 8080 端口映射到容器的 80 端口</span></span><br><span class="line">  environment:</span><br><span class="line">    WORDPRESS_DB_PASSWORD: example</span><br><span class="line">  mysql:</span><br><span class="line">    image: brunswickheads/mariadb-5.5-s390x</span><br><span class="line">  environment:</span><br><span class="line">    MYSQL_ROOT_PASSWORD: example</span><br><span class="line"></span><br><span class="line">:wq</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 查看docker-compose.yml</span></span><br><span class="line"></span><br><span class="line">cat docker-compose.yml</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 创建wordpress目录方便整理</span></span><br><span class="line"></span><br><span class="line">mkdir wordpress</span><br><span class="line">mv docker-compose.yml wordpress/</span><br><span class="line"><span class="hljs-built_in">cd</span> wordpress/</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 根据docker-compose.yml中定义的服务启动容器</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 创建完成后，查看相关容器的状态</span></span><br><span class="line"></span><br><span class="line">docker-compose ps</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 浏览器访问http://[Your LinuxONE IP Address]:8080，即可看到 WordPress 的页面</span></span><br></pre></td></tr></table></figure><h3><span id="安装并运行-todo-app熟悉mean-stack-docker架构">安装并运行 Todo App<strong>（熟悉MEAN Stack + Docker架构）</strong></span></h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 为方便管理文件，切换到家目录</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">cd</span> ~</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 从Github拉取源码到本地使用</span></span><br><span class="line"></span><br><span class="line">git <span class="hljs-built_in">clone</span> https://github.com/IBM/Cloud-Native-Workloads-on-LinuxONE</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 迁移源码文件夹到家目录</span></span><br><span class="line"></span><br><span class="line">cp -r Cloud-Native-Workloads-on-LinuxONE/files/mean-docker ./</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 安装显示目录树的插件包</span></span><br><span class="line"></span><br><span class="line">yum install -y tree</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 显示mean-docker的目录树</span></span><br><span class="line"></span><br><span class="line">tree mean-docker</span><br><span class="line"></span><br><span class="line">mean-docker</span><br><span class="line">├── docker-compose.yml <span class="hljs-comment"># docker-compose 配置文件</span></span><br><span class="line">├── express-server</span><br><span class="line">│   ├── app</span><br><span class="line">│   │   ├── models</span><br><span class="line">│   │   │   └── todo.js</span><br><span class="line">│   │   └── routes.js</span><br><span class="line">│   ├── config</span><br><span class="line">│   │   └── database.js</span><br><span class="line">│   ├── Dockerfile <span class="hljs-comment"># docker image 生成文件</span></span><br><span class="line">│   ├── license</span><br><span class="line">│   ├── package.json</span><br><span class="line">│   ├── public</span><br><span class="line">│   │   ├── index.html <span class="hljs-comment"># 前端文件</span></span><br><span class="line">│   │   └── js</span><br><span class="line">│   │       ├── controllers</span><br><span class="line">│   │       │   └── main.js <span class="hljs-comment"># 后端文件</span></span><br><span class="line">│   │       ├── core.js</span><br><span class="line">│   │       └── services</span><br><span class="line">│   │           └── todos.js <span class="hljs-comment"># 数据库文件</span></span><br><span class="line">│   ├── README.md</span><br><span class="line">│   └── server.js</span><br><span class="line">└── README.md <span class="hljs-comment"># 说明文档</span></span><br><span class="line">8 directories, 14 files</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 修改Angular.js成国内镜像源</span></span><br><span class="line"></span><br><span class="line">vim mean-docker/express-server/public/index.html</span><br><span class="line">src=<span class="hljs-string">"//cdn.bootcss.com/angular.js/1.2.16/angular.min.js"</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 查看Dockerfile的内容</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">cd</span> express-server/</span><br><span class="line">ls</span><br><span class="line">vim Dockerfile</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 编辑Dockerfile的内容</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Expose the port the app runs in</span></span><br><span class="line">EXPOSE 8081</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"><span class="hljs-comment"># Express listening port</span></span><br><span class="line">ENV PORT 8081</span><br><span class="line"></span><br><span class="line">:wq</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 重新构建镜像</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">cd</span> mean-docker</span><br><span class="line">docker-compose down  <span class="hljs-comment"># 停止正在运行的容器</span></span><br><span class="line">docker-compose build <span class="hljs-comment"># 先重新构建镜像</span></span><br><span class="line">docker-compose up    <span class="hljs-comment"># 再基于新镜像重新启动容器</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 查看docker-compose.yml的内容</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">cd</span> mean-docker/</span><br><span class="line">ls</span><br><span class="line">vim docker-compose.yml</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 编辑docker-compose.yml的内容</span></span><br><span class="line"><span class="hljs-comment"># 因为之前本地的8080端口被 WordPress 占用了，所以这里我们使用8081端口</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">ports:</span><br><span class="line">- <span class="hljs-string">"8081:8081"</span> <span class="hljs-comment"># 本地 8081 端口映射到 express 容器的 8081 端口</span></span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">:wq</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 启动指定服务</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 使用docker-compose ps命令查看启动的容器</span></span><br><span class="line"></span><br><span class="line">docker-compose ps</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 浏览器访问http://[ip of machine]:8081，即可看到你的 TODO-List App</span></span><br></pre></td></tr></table></figure><h3><span id="todo-app前端插入数据-后端处理数据-数据库查数据熟悉mean-stack-docker前后端数据库交互">Todo App前端插入数据、后端处理数据、数据库查数据<strong>（熟悉MEAN Stack + Docker前后端数据库交互）</strong></span></h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 在运行的容器中执行命令</span></span><br><span class="line"></span><br><span class="line">docker <span class="hljs-built_in">exec</span> –it meandocker_database_1 bash</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 进入MongoDB</span></span><br><span class="line"></span><br><span class="line">&gt; mongo</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 查看数据库</span></span><br><span class="line"></span><br><span class="line">&gt; show dbs</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 指定数据库</span></span><br><span class="line"></span><br><span class="line">&gt; use docker-mean</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 枚举数据表</span></span><br><span class="line"></span><br><span class="line">&gt; show tables</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 查看元祖集</span></span><br><span class="line"></span><br><span class="line">&gt; db.todos.find()</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 指定元祖项</span></span><br><span class="line"></span><br><span class="line">&gt; db.todos.find(&#123;<span class="hljs-string">"key"</span>: <span class="hljs-string">"value"</span>&#125;)</span><br></pre></td></tr></table></figure><h3><span id="本地部署金融微服务熟悉localhost-micro-services模式">本地部署金融微服务<strong>（熟悉Localhost → Micro-services模式）</strong></span></h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># Fork ICp-banking-microservices 到自己账号下，将你Fork的项目git clone至本地</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Github配置过SSH</span></span><br><span class="line">git <span class="hljs-built_in">clone</span> git@github.com:LotteWong/ICp-banking-microservices.git</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Github未配置SSH</span></span><br><span class="line">git <span class="hljs-built_in">clone</span> https://github.com/YOUR_USERNAME/ICp-banking-microservices</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 在banking-application/public/js/bankingAPI.js中填入你的Client ID和Client Secret</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 进入ICp-banking-microservices/banking-application目录，安装npm依赖</span></span><br><span class="line"></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 如果出现npm代理设置错误，重新设置代理即可</span></span><br><span class="line"></span><br><span class="line">npm config <span class="hljs-built_in">set</span> registry <span class="hljs-string">"http://registry.npmjs.org/"</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 进入ICp-banking-microservices/banking-application目录，启动应用</span></span><br><span class="line"></span><br><span class="line">node app.js</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 浏览器访问http://localhost:3000，即可访问应用</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 随便选择一个customer ID测试，若有JSON格式的数据返回，则说明API可用。如果出错可自排查，可能是ID和Secret不匹配（前往开发者页面的应用程序页面中验证ID和Secret）或者浏览器不支持网速较慢之类（更换浏览器更换网络源）</span></span><br></pre></td></tr></table></figure><h3><span id="远程部署金融微服务熟悉docker-micro-services模式">远程部署金融微服务<strong>（熟悉Docker → Micro-services模式）</strong></span></h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 在非 LinuxOne 的本机将项目推送至 Github 远程仓库</span></span><br><span class="line"><span class="hljs-comment"># !!! 实际上不应该把Client ID和Client Secret这种密钥类型的数据推到 Github 上，这里为了方便实验暂时这么做，以后切勿模仿。 !!!</span></span><br><span class="line"></span><br><span class="line">git add public/js/bankingAPI.js</span><br><span class="line">git commit -m <span class="hljs-string">"Update of bankingAPI.js"</span></span><br><span class="line">git push origin master</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 先登录你的 LinuxONE 主机实例，为方便管理文件，切换到家目录</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">cd</span> ~</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 将你 Fork 后又更新的代码拉取到本地</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Github配置过SSH</span></span><br><span class="line">git <span class="hljs-built_in">clone</span> git@github.com:LotteWong/ICp-banking-microservices.git</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Github未配置SSH</span></span><br><span class="line">git <span class="hljs-built_in">clone</span> https://github.com/YOUR_USERNAME/ICp-banking-microservices</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 构建 Docker 镜像</span></span><br><span class="line"></span><br><span class="line">docker build -t <span class="hljs-string">"respository:tag"</span> ./</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 查看 Docker 镜像</span></span><br><span class="line"></span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 启动 Docker 容器</span></span><br><span class="line"></span><br><span class="line">docker run -p 3000:3000 respository:tag</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 查看 Docker 容器</span></span><br><span class="line"></span><br><span class="line">docker ps</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 浏览器访问http://[LinuxOne Host IP]:3000，即可访问应用</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 随便选择一个customer ID测试，若有JSON格式的数据返回，则说明API可用。如果出错可自排查，可能是ID和Secret不匹配（前往开发者页面的应用程序页面中验证ID和Secret）或者浏览器不支持网速较慢之类（更换浏览器更换网络源）</span></span><br></pre></td></tr></table></figure><h3><span id="云端部署金融微服务熟悉cloud-micro-services模式">云端部署金融微服务<strong>（熟悉Cloud → Micro-services模式）</strong></span></h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 到 ICP 中部署好的应用，点击启动，浏览器会自动跳转到分配的端口</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 之后就和此前的实验一样了，只不过你的应用是部署在 ICP 上，由 Kubernetes 自动维护可用的 Pod 数量</span></span><br></pre></td></tr></table></figure><h2><span id="注意事项-notices"><strong>注意事项 Notices</strong></span></h2><ul><li><strong>端口映射</strong>就是将主机的IP地址的一个端口映射到局域网中一台机器，当用户访问这个IP的这个端口时，服务器自动将请求映射到对应局域网分机。</li><li><code>.pem</code>为通用证书格式，<code>ppk</code>为PuTTY下面的专有格式。两者都为<strong>SSH Key Pairs</strong>格式，内含公钥和密钥。</li><li><strong>镜像是类，容器是对象，服务是对象集。</strong><code>Dockerfile</code>用于构建镜像；<code>docker-compose.yml</code>用于组织镜像；<code>docker run</code>用于启动容器；<code>docker-compose up</code>用于启动服务。</li><li>使用Docker需要非常注意<strong>卷的管理</strong>，如果采用默认匿名的方式而不指定卷的位置，服务器的容量很快就会被每次重新生成的同一镜像给爆掉。</li><li><strong>MEAN Stack</strong>包括<code>MongoDB（数据库）</code>、<code>Express.js（路由）</code>、<code>AngularJS（前端）</code>和<code>Node.js（后端）</code>。本次实验最终项目友链 👉 <a href="https://github.com/LotteWong/SCUT_Online_Bank_Application" target="_blank" rel="noopener">SCUT Online Bank Application</a>。</li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在&lt;strong&gt;LinuxOne&lt;/strong&gt;上利用&lt;strong&gt;Docker&lt;/strong&gt;部署应用与服务，主要分为以下&lt;strong&gt;五个部分&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;环境准备 Environment&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker原理 Theory&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker使用 Usage&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker实战 Practice&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;注意事项 Notices&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="Cloud Computing" scheme="https://lottewong.github.io/categories/Cloud-Computing/"/>
    
    
      <category term="Docker" scheme="https://lottewong.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>#Configuration# 从零到壹：GitHub Pages + Hexo = Blog</title>
    <link href="https://lottewong.github.io/2019/06/02/%E4%BB%8E%E9%9B%B6%E5%88%B0%E5%A3%B9%EF%BC%9AGitHub%20Pages%20+%20Hexo%20=%20Blog/"/>
    <id>https://lottewong.github.io/2019/06/02/%E4%BB%8E%E9%9B%B6%E5%88%B0%E5%A3%B9%EF%BC%9AGitHub%20Pages%20+%20Hexo%20=%20Blog/</id>
    <published>2019-06-01T23:00:21.000Z</published>
    <updated>2020-01-02T04:14:40.863Z</updated>
    
    <content type="html"><![CDATA[<p>利用<strong>GitHub Pages+Hexo</strong>打造一个个人博客，主要分为以下<strong>五个部分</strong>：</p><ul><li>环境准备 Environment</li><li><strong>文件设置 Configuration</strong></li><li>个性选项 Customization</li><li><strong>博客写作 Writing</strong></li><li>博客备份 Backup</li></ul><hr><a id="more"></a><h1><span id="目录-table-of-contents"><strong>目录 Table of Contents</strong></span></h1><!-- toc --><ul><li><a href="#环境准备-environment"><strong>环境准备 Environment</strong></a><ul><li><a href="#安装git-github">安装Git + Github</a></li><li><a href="#安装nodejs">安装Node.js</a></li><li><a href="#安装hexo">安装Hexo</a></li></ul></li><li><a href="#文件设置-configuration"><strong>文件设置 Configuration</strong></a><ul><li><a href="#本地运行">本地运行</a></li><li><a href="#远程运行">远程运行</a></li><li><a href="#基本配置">基本配置</a></li></ul></li><li><a href="#个性选项-customization"><strong>个性选项 Customization</strong></a><ul><li><a href="#基本配置-1">基本配置</a></li></ul></li><li><a href="#博客写作-writing"><strong>博客写作 Writing</strong></a></li><li><a href="#博客备份-backup"><strong>博客备份 Backup</strong></a></li><li><a href="#待办事项-todos"><strong>待办事项 Todos</strong></a></li></ul><!-- tocstop --><hr><h2><span id="环境准备-environment"><strong>环境准备 Environment</strong></span></h2><h3><span id="安装git-github">安装Git + Github</span></h3><ul><li><p><strong>安装Git部署插件:</strong> </p><figure class="highlight powershell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li></ul><h3><span id="安装nodejs">安装Node.js</span></h3><ul><li><p><strong>安装Node.js:</strong> </p><p><a href="https://link.zhihu.com/?target=https%3A//nodejs.org/en/download/" target="_blank" rel="noopener">Download | Node.js</a></p></li><li><p><strong>检查是否安装成功:</strong></p><figure class="highlight powershell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure></li></ul><h3><span id="安装hexo">安装Hexo</span></h3><ul><li><p><strong>安装Hexo:</strong></p><figure class="highlight powershell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p><strong>检查是否安装成功:</strong></p><figure class="highlight powershell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure></li><li><p><strong>初始化:</strong></p><figure class="highlight powershell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog</span><br></pre></td></tr></table></figure></li></ul><h2><span id="文件设置-configuration"><strong>文件设置 Configuration</strong></span></h2><h3><span id="本地运行">本地运行</span></h3><figure class="highlight powershell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean <span class="hljs-comment"># 删除缓存</span></span><br><span class="line">$ hexo g <span class="hljs-comment"># 生成Hexo页面</span></span><br><span class="line">$ hexo s <span class="hljs-comment"># 本地部署Hexo页面</span></span><br></pre></td></tr></table></figure><h3><span id="远程运行">远程运行</span></h3><figure class="highlight powershell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean <span class="hljs-comment"># 删除缓存</span></span><br><span class="line">$ hexo g <span class="hljs-comment"># 生成Hexo页面</span></span><br><span class="line">$ hexo d <span class="hljs-comment"># 远程部署Hexo页面</span></span><br></pre></td></tr></table></figure><h3><span id="基本配置">基本配置</span></h3><p>/_config.yml</p><figure class="highlight yaml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># Hexo Configuration</span></span><br><span class="line"><span class="hljs-comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="hljs-comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Site</span></span><br><span class="line"><span class="hljs-attr">title:</span> <span class="hljs-string">LotteWong's</span> <span class="hljs-string">Blog</span> <span class="hljs-comment"># 个人博客主标题</span></span><br><span class="line"><span class="hljs-attr">subtitle:</span> <span class="hljs-string">在代码符号表象中避难。</span> <span class="hljs-comment"># 个人博客副标题</span></span><br><span class="line"><span class="hljs-attr">description:</span> <span class="hljs-comment"># 搜索引擎描述词</span></span><br><span class="line"><span class="hljs-attr">keywords:</span> <span class="hljs-comment"># 搜索引擎关键词</span></span><br><span class="line"><span class="hljs-attr">author:</span> <span class="hljs-string">LotteWong</span> <span class="hljs-comment"># 作者名称</span></span><br><span class="line"><span class="hljs-attr">avatar:</span> <span class="hljs-string">./public/images/avatar.png</span> <span class="hljs-comment"># 作者头像</span></span><br><span class="line"><span class="hljs-attr">language:</span> <span class="hljs-string">en</span> <span class="hljs-comment"># 网站语言</span></span><br><span class="line"><span class="hljs-attr">timezone:</span> <span class="hljs-string">Asia/Shanghai</span> <span class="hljs-comment"># 网站时区</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># URL</span></span><br><span class="line"><span class="hljs-comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="hljs-attr">url:</span> <span class="hljs-attr">https://lottewong.github.io</span></span><br><span class="line"><span class="hljs-attr">root:</span> <span class="hljs-string">/</span></span><br><span class="line"><span class="hljs-attr">permalink:</span> <span class="hljs-string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="hljs-attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Directory</span></span><br><span class="line"><span class="hljs-attr">source_dir:</span> <span class="hljs-string">source</span> <span class="hljs-comment"># 文章目录</span></span><br><span class="line"><span class="hljs-attr">public_dir:</span> <span class="hljs-string">public</span> <span class="hljs-comment"># 素材目录</span></span><br><span class="line"><span class="hljs-attr">tag_dir:</span> <span class="hljs-string">tags</span> <span class="hljs-comment"># 标签目录</span></span><br><span class="line"><span class="hljs-attr">archive_dir:</span> <span class="hljs-string">archives</span> <span class="hljs-comment"># 归档目录</span></span><br><span class="line"><span class="hljs-attr">category_dir:</span> <span class="hljs-string">categories</span> <span class="hljs-comment"># 分类目录</span></span><br><span class="line"><span class="hljs-attr">code_dir:</span> <span class="hljs-string">downloads/code</span></span><br><span class="line"><span class="hljs-attr">i18n_dir:</span> <span class="hljs-string">:lang</span></span><br><span class="line"><span class="hljs-attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Writing</span></span><br><span class="line"><span class="hljs-attr">new_post_name:</span> <span class="hljs-string">:title.md</span> <span class="hljs-comment"># File name of new posts</span></span><br><span class="line"><span class="hljs-attr">default_layout:</span> <span class="hljs-string">post</span></span><br><span class="line"><span class="hljs-attr">titlecase:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># Transform title into titlecase</span></span><br><span class="line"><span class="hljs-attr">external_link:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># Open external links in new tab</span></span><br><span class="line"><span class="hljs-attr">filename_case:</span> <span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-attr">render_drafts:</span> <span class="hljs-literal">false</span></span><br><span class="line"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">false</span></span><br><span class="line"><span class="hljs-attr">relative_link:</span> <span class="hljs-literal">false</span></span><br><span class="line"><span class="hljs-attr">future:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-attr">highlight:</span></span><br><span class="line"><span class="hljs-attr">  enable:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-attr">  line_number:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-attr">  auto_detect:</span> <span class="hljs-literal">false</span></span><br><span class="line"><span class="hljs-attr">  tab_replace:</span></span><br><span class="line">  </span><br><span class="line"><span class="hljs-comment"># Home page setting</span></span><br><span class="line"><span class="hljs-comment"># path: Root path for your blogs index page. (default = '')</span></span><br><span class="line"><span class="hljs-comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="hljs-comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="hljs-attr">index_generator:</span></span><br><span class="line"><span class="hljs-attr">  path:</span> <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-attr">  per_page:</span> <span class="hljs-number">10</span></span><br><span class="line"><span class="hljs-attr">  order_by:</span> <span class="hljs-bullet">-date</span></span><br><span class="line">  </span><br><span class="line"><span class="hljs-comment"># Category &amp; Tag</span></span><br><span class="line"><span class="hljs-attr">default_category:</span> <span class="hljs-string">uncategorized</span></span><br><span class="line"><span class="hljs-attr">category_map:</span></span><br><span class="line"><span class="hljs-attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Date / Time format</span></span><br><span class="line"><span class="hljs-comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="hljs-comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="hljs-comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="hljs-attr">date_format:</span> <span class="hljs-string">YYYY-MM-DD</span></span><br><span class="line"><span class="hljs-attr">time_format:</span> <span class="hljs-attr">HH:mm:ss</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Pagination</span></span><br><span class="line"><span class="hljs-comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="hljs-attr">per_page:</span> <span class="hljs-number">10</span></span><br><span class="line"><span class="hljs-attr">pagination_dir:</span> <span class="hljs-string">page</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Extensions</span></span><br><span class="line"><span class="hljs-comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="hljs-comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="hljs-attr">plugins:</span> <span class="hljs-comment"># 设置个人博客插件</span></span><br><span class="line"><span class="hljs-attr">theme:</span> <span class="hljs-string">icarus</span> <span class="hljs-comment"># 设置个人博客主题</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Deployment</span></span><br><span class="line"><span class="hljs-comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="hljs-attr">deploy:</span> </span><br><span class="line"><span class="hljs-attr">  type:</span> <span class="hljs-string">git</span> <span class="hljs-comment"># 部署类型</span></span><br><span class="line"><span class="hljs-attr">  repo:</span> <span class="hljs-string">git@github.com:LotteWong/lottewong.github.io.git</span> <span class="hljs-comment"># 部署仓库</span></span><br><span class="line"><span class="hljs-attr">  branch:</span> <span class="hljs-string">master</span> <span class="hljs-comment"># 部署分支</span></span><br></pre></td></tr></table></figure><h2><span id="个性选项-customization"><strong>个性选项 Customization</strong></span></h2><h3><span id="基本配置">基本配置</span></h3><p>/themes/icarus/_config.yml</p><figure class="highlight yaml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># Version of the Icarus theme that is currently used</span></span><br><span class="line"><span class="hljs-attr">version:</span> <span class="hljs-number">2.3</span><span class="hljs-number">.0</span></span><br><span class="line"><span class="hljs-comment"># Path or URL to the website's icon</span></span><br><span class="line"><span class="hljs-attr">favicon:</span> <span class="hljs-string">/images/favicon.ico</span></span><br><span class="line"><span class="hljs-comment"># Path or URL to RSS atom.xml</span></span><br><span class="line"><span class="hljs-attr">rss:</span> <span class="hljs-string">./atom.xml</span></span><br><span class="line"><span class="hljs-comment"># Path or URL to the website's logo to be shown on the left of the navigation bar or footer</span></span><br><span class="line"><span class="hljs-attr">logo:</span> <span class="hljs-string">/images/logo.png</span></span><br><span class="line"><span class="hljs-comment"># Open Graph metadata</span></span><br><span class="line"><span class="hljs-comment"># https://hexo.io/docs/helpers.html#open-graph</span></span><br><span class="line"><span class="hljs-attr">open_graph:</span></span><br><span class="line">    <span class="hljs-comment"># Facebook App ID</span></span><br><span class="line">    <span class="hljs-comment"># fb_app_id: </span></span><br><span class="line">    <span class="hljs-comment"># Facebook Admin ID</span></span><br><span class="line">    <span class="hljs-comment"># fb_admins: </span></span><br><span class="line">    <span class="hljs-comment"># Twitter ID</span></span><br><span class="line">    <span class="hljs-comment"># twitter_id:</span></span><br><span class="line">    <span class="hljs-comment"># Twitter site</span></span><br><span class="line">    <span class="hljs-comment"># twitter_site: </span></span><br><span class="line">    <span class="hljs-comment"># Google+ profile link</span></span><br><span class="line">    <span class="hljs-comment"># google_plus: </span></span><br><span class="line"><span class="hljs-comment"># Navigation bar link settings 顶部栏设置</span></span><br><span class="line"><span class="hljs-attr">navbar:</span></span><br><span class="line">    <span class="hljs-comment"># Navigation bar menu links</span></span><br><span class="line"><span class="hljs-attr">    menu:</span></span><br><span class="line"><span class="hljs-attr">        Home:</span> <span class="hljs-string">/</span></span><br><span class="line"><span class="hljs-attr">        Archives:</span> <span class="hljs-string">/archives</span></span><br><span class="line"><span class="hljs-attr">        Categories:</span> <span class="hljs-string">/categories</span></span><br><span class="line"><span class="hljs-attr">        Tags:</span> <span class="hljs-string">/tags</span></span><br><span class="line"><span class="hljs-attr">        About:</span> <span class="hljs-string">/about</span></span><br><span class="line">    <span class="hljs-comment"># Navigation bar links to be shown on the right</span></span><br><span class="line"><span class="hljs-attr">    links:</span></span><br><span class="line"><span class="hljs-attr">        Email:</span></span><br><span class="line"><span class="hljs-attr">            icon:</span> <span class="hljs-string">far</span> <span class="hljs-string">fa-envelope-open</span></span><br><span class="line"><span class="hljs-attr">            url:</span> <span class="hljs-attr">mailto:lottewong21@gmail.com</span></span><br><span class="line"><span class="hljs-comment"># Footer section link settings 页尾栏设置</span></span><br><span class="line"><span class="hljs-attr">footer:</span></span><br><span class="line">    <span class="hljs-comment"># Links to be shown on the right of the footer section</span></span><br><span class="line"><span class="hljs-attr">    links:</span></span><br><span class="line"><span class="hljs-attr">        GitHub:</span></span><br><span class="line"><span class="hljs-attr">            icon:</span> <span class="hljs-string">fab</span> <span class="hljs-string">fa-github</span></span><br><span class="line"><span class="hljs-attr">            url:</span> <span class="hljs-string">'https://github.com/LotteWong'</span></span><br><span class="line"><span class="hljs-attr">        RSS:</span></span><br><span class="line"><span class="hljs-attr">            icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-rss</span></span><br><span class="line"><span class="hljs-attr">            url:</span> <span class="hljs-string">/atom.xml</span></span><br><span class="line"><span class="hljs-comment"># Sidebar settings. 侧边栏设置</span></span><br><span class="line"><span class="hljs-comment"># Please be noted that a sidebar is only visible when it has at least one widget</span></span><br><span class="line"><span class="hljs-attr">sidebar:</span></span><br><span class="line">    <span class="hljs-comment"># left sidebar settings</span></span><br><span class="line"><span class="hljs-attr">    left:</span></span><br><span class="line">        <span class="hljs-comment"># Whether the left sidebar is sticky when page scrolls</span></span><br><span class="line">        <span class="hljs-comment"># https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/</span></span><br><span class="line"><span class="hljs-attr">        sticky:</span> <span class="hljs-literal">false</span></span><br><span class="line">    <span class="hljs-comment"># right sidebar settings</span></span><br><span class="line"><span class="hljs-attr">    right:</span></span><br><span class="line">        <span class="hljs-comment"># Whether the right sidebar is sticky when page scrolls</span></span><br><span class="line">        <span class="hljs-comment"># https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/</span></span><br><span class="line"><span class="hljs-attr">        sticky:</span> <span class="hljs-literal">false</span></span><br><span class="line"><span class="hljs-comment"># Sidebar widget settings 侧边栏设置</span></span><br><span class="line"><span class="hljs-comment"># https://ppoffice.github.io/hexo-theme-icarus/categories/Widgets/</span></span><br><span class="line"><span class="hljs-attr">widgets:</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Widget name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">profile</span></span><br><span class="line">        <span class="hljs-comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="hljs-attr">        position:</span> <span class="hljs-string">left</span></span><br><span class="line">        <span class="hljs-comment"># Author name to be shown in the profile widget</span></span><br><span class="line"><span class="hljs-attr">        author:</span> <span class="hljs-string">LotteWong</span></span><br><span class="line">        <span class="hljs-comment"># Title of the author to be shown in the profile widget</span></span><br><span class="line"><span class="hljs-attr">        author_title:</span> <span class="hljs-string">SCUT,</span> <span class="hljs-string">Undergraduate</span></span><br><span class="line">        <span class="hljs-comment"># Author's current location to be shown in the profile widget</span></span><br><span class="line"><span class="hljs-attr">        location:</span> <span class="hljs-string">Guangzhou,</span> <span class="hljs-string">China</span></span><br><span class="line">        <span class="hljs-comment"># Path or URL to the avatar to be shown in the profile widget</span></span><br><span class="line"><span class="hljs-attr">        avatar:</span> </span><br><span class="line">        <span class="hljs-comment"># Email address for the Gravatar to be shown in the profile widget</span></span><br><span class="line"><span class="hljs-attr">        gravatar:</span> </span><br><span class="line">        <span class="hljs-comment"># Whether to show avatar image rounded or square</span></span><br><span class="line"><span class="hljs-attr">        avatar_rounded:</span> <span class="hljs-literal">false</span></span><br><span class="line">        <span class="hljs-comment"># Path or URL for the follow button</span></span><br><span class="line"><span class="hljs-attr">        follow_link:</span> <span class="hljs-string">'https://github.com/LotteWong'</span></span><br><span class="line">        <span class="hljs-comment"># Links to be shown on the bottom of the profile widget</span></span><br><span class="line"><span class="hljs-attr">        social_links:</span></span><br><span class="line"><span class="hljs-attr">            Organization:</span></span><br><span class="line"><span class="hljs-attr">                icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-sitemap</span></span><br><span class="line"><span class="hljs-attr">                url:</span> <span class="hljs-string">'https://github.com/SCUTMSC'</span></span><br><span class="line"><span class="hljs-attr">            Project:</span></span><br><span class="line"><span class="hljs-attr">                icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-project-diagram</span></span><br><span class="line"><span class="hljs-attr">                url:</span> <span class="hljs-string">'https://github.com/scutse-man-month-myth/InkYear'</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Widget name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">toc</span></span><br><span class="line">        <span class="hljs-comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="hljs-attr">        position:</span> <span class="hljs-string">left</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Widget name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">links</span></span><br><span class="line">        <span class="hljs-comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="hljs-attr">        position:</span> <span class="hljs-string">left</span></span><br><span class="line">        <span class="hljs-comment"># Links to be shown in the links widget</span></span><br><span class="line"><span class="hljs-attr">        links:</span></span><br><span class="line"><span class="hljs-attr">            Bokjan:</span> <span class="hljs-string">'https://bokjan.com/'</span></span><br><span class="line"><span class="hljs-attr">            Kingsley:</span> <span class="hljs-string">'https://kingsleyxie.cn/'</span></span><br><span class="line"><span class="hljs-attr">            sticnarf:</span> <span class="hljs-string">'https://sticnarf.me/'</span></span><br><span class="line"><span class="hljs-attr">            ahalims:</span> <span class="hljs-string">'https://ahalims.github.io/'</span></span><br><span class="line"><span class="hljs-attr">            xcw:</span> <span class="hljs-string">'https://yifanyu123.github.io/'</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Widget name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">archive</span></span><br><span class="line">        <span class="hljs-comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="hljs-attr">        position:</span> <span class="hljs-string">left</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Widget name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">tagcloud</span></span><br><span class="line">        <span class="hljs-comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="hljs-attr">        position:</span> <span class="hljs-string">left</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Widget name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">recent_posts</span></span><br><span class="line">        <span class="hljs-comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="hljs-attr">        position:</span> <span class="hljs-string">right</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Widget name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">category</span></span><br><span class="line">        <span class="hljs-comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="hljs-attr">        position:</span> <span class="hljs-string">right</span></span><br><span class="line"><span class="hljs-bullet">    -</span></span><br><span class="line">        <span class="hljs-comment"># Widget name</span></span><br><span class="line"><span class="hljs-attr">        type:</span> <span class="hljs-string">tag</span></span><br><span class="line">        <span class="hljs-comment"># Where should the widget be placed, left or right</span></span><br><span class="line"><span class="hljs-attr">        position:</span> <span class="hljs-string">right</span></span><br><span class="line"><span class="hljs-comment"># Article display settings</span></span><br><span class="line"><span class="hljs-attr">article:</span></span><br><span class="line"><span class="hljs-attr">    highlight:</span> <span class="hljs-string">atom-one-light</span></span><br><span class="line">        <span class="hljs-comment"># Code highlight theme</span></span><br><span class="line">        <span class="hljs-comment"># https://github.com/highlightjs/highlight.js/tree/master/src/styles</span></span><br><span class="line">        <span class="hljs-comment"># theme: atom-one-light</span></span><br><span class="line">        <span class="hljs-comment"># Show code copying button</span></span><br><span class="line">        <span class="hljs-comment"># clipboard: true</span></span><br><span class="line">        <span class="hljs-comment"># Default folding status of the code blocks. Can be "", "folded", "unfolded"</span></span><br><span class="line">        <span class="hljs-comment"># fold: unfolded</span></span><br><span class="line">    <span class="hljs-comment"># Whether to show article thumbnail images</span></span><br><span class="line"><span class="hljs-attr">    thumbnail:</span> <span class="hljs-literal">true</span></span><br><span class="line">    <span class="hljs-comment"># Whether to show estimate article reading time</span></span><br><span class="line"><span class="hljs-attr">    readtime:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-comment"># Search plugin settings 搜索功能插件</span></span><br><span class="line"><span class="hljs-comment"># https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Search</span></span><br><span class="line"><span class="hljs-attr">search:</span></span><br><span class="line">    <span class="hljs-comment"># Name of the search plugin</span></span><br><span class="line"><span class="hljs-attr">    type:</span> <span class="hljs-string">insight</span></span><br><span class="line"><span class="hljs-comment"># Comment plugin settings 评论功能插件</span></span><br><span class="line"><span class="hljs-comment"># https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Comment</span></span><br><span class="line"><span class="hljs-attr">comment:</span></span><br><span class="line">    <span class="hljs-comment"># Name of the comment plugin</span></span><br><span class="line"><span class="hljs-attr">    type:</span> </span><br><span class="line"><span class="hljs-comment"># Donation entries 打赏功能插件</span></span><br><span class="line"><span class="hljs-comment"># https://ppoffice.github.io/hexo-theme-icarus/categories/Donation/</span></span><br><span class="line"><span class="hljs-attr">donate:</span></span><br><span class="line">    <span class="hljs-comment"># -</span></span><br><span class="line">        <span class="hljs-comment"># Donation entry name</span></span><br><span class="line">        <span class="hljs-comment"># type: alipay</span></span><br><span class="line">        <span class="hljs-comment"># Qrcode image URL</span></span><br><span class="line">        <span class="hljs-comment"># qrcode: '/images/alipay.png'</span></span><br><span class="line">    <span class="hljs-comment"># -</span></span><br><span class="line">        <span class="hljs-comment"># Donation entry name</span></span><br><span class="line">        <span class="hljs-comment"># type: wechat</span></span><br><span class="line">        <span class="hljs-comment"># Qrcode image URL</span></span><br><span class="line">        <span class="hljs-comment"># qrcode: '/images/wechat.png'</span></span><br><span class="line">    <span class="hljs-comment"># -</span></span><br><span class="line">        <span class="hljs-comment"># Donation entry name</span></span><br><span class="line">        <span class="hljs-comment"># type: paypal</span></span><br><span class="line">        <span class="hljs-comment"># Paypal business ID or email address</span></span><br><span class="line">        <span class="hljs-comment"># business: 'SuperGsama@outlook.com'</span></span><br><span class="line">        <span class="hljs-comment"># Currency code</span></span><br><span class="line">        <span class="hljs-comment"># currency_code: USD</span></span><br><span class="line"><span class="hljs-comment"># Share plugin settings 分享功能插件</span></span><br><span class="line"><span class="hljs-comment"># https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Share</span></span><br><span class="line"><span class="hljs-attr">share:</span></span><br><span class="line">    <span class="hljs-comment"># Share plugin name</span></span><br><span class="line"><span class="hljs-attr">    type:</span> </span><br><span class="line"><span class="hljs-comment"># Other plugin settings</span></span><br><span class="line"><span class="hljs-attr">plugins:</span></span><br><span class="line">    <span class="hljs-comment"># Enable page animations</span></span><br><span class="line"><span class="hljs-attr">    animejs:</span> <span class="hljs-literal">true</span></span><br><span class="line">    <span class="hljs-comment"># Enable the lightGallery and Justified Gallery plugins</span></span><br><span class="line">    <span class="hljs-comment"># https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/gallery-plugin/</span></span><br><span class="line"><span class="hljs-attr">    gallery:</span> <span class="hljs-literal">true</span></span><br><span class="line">    <span class="hljs-comment"># Enable the Outdated Browser plugin</span></span><br><span class="line">    <span class="hljs-comment"># http://outdatedbrowser.com/</span></span><br><span class="line"><span class="hljs-attr">    outdated-browser:</span> <span class="hljs-literal">true</span></span><br><span class="line">    <span class="hljs-comment"># Enable the MathJax plugin</span></span><br><span class="line">    <span class="hljs-comment"># https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/mathjax-plugin/</span></span><br><span class="line"><span class="hljs-attr">    mathjax:</span> <span class="hljs-literal">true</span></span><br><span class="line">    <span class="hljs-comment"># Show the back to top button on mobile devices</span></span><br><span class="line"><span class="hljs-attr">    back-to-top:</span> <span class="hljs-literal">true</span></span><br><span class="line">    <span class="hljs-comment"># Google Analytics plugin settings</span></span><br><span class="line">    <span class="hljs-comment"># https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Google-Analytics</span></span><br><span class="line"><span class="hljs-attr">    google-analytics:</span></span><br><span class="line">        <span class="hljs-comment"># Google Analytics tracking id</span></span><br><span class="line"><span class="hljs-attr">        tracking_id:</span> </span><br><span class="line">    <span class="hljs-comment"># Baidu Analytics plugin settings</span></span><br><span class="line">    <span class="hljs-comment"># https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Baidu-Analytics</span></span><br><span class="line"><span class="hljs-attr">    baidu-analytics:</span></span><br><span class="line">        <span class="hljs-comment"># Baidu Analytics tracking id</span></span><br><span class="line"><span class="hljs-attr">        tracking_id:</span> </span><br><span class="line">    <span class="hljs-comment"># Hotjar user feedback plugin</span></span><br><span class="line">    <span class="hljs-comment"># https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Hotjar</span></span><br><span class="line"><span class="hljs-attr">    hotjar:</span></span><br><span class="line">        <span class="hljs-comment"># Hotjar site id</span></span><br><span class="line"><span class="hljs-attr">        site_id:</span> </span><br><span class="line">    <span class="hljs-comment"># Show a loading progress bar at top of the page</span></span><br><span class="line"><span class="hljs-attr">    progressbar:</span> <span class="hljs-literal">true</span></span><br><span class="line">    <span class="hljs-comment"># Show the copy button in the highlighted code area</span></span><br><span class="line"><span class="hljs-attr">    clipboard:</span> <span class="hljs-literal">true</span></span><br><span class="line">    <span class="hljs-comment"># BuSuanZi site/page view counter</span></span><br><span class="line">    <span class="hljs-comment"># https://busuanzi.ibruce.info</span></span><br><span class="line"><span class="hljs-attr">    busuanzi:</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-comment"># CDN provider settings</span></span><br><span class="line"><span class="hljs-comment"># https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/speed-up-your-site-with-custom-cdn/</span></span><br><span class="line"><span class="hljs-attr">providers:</span></span><br><span class="line">    <span class="hljs-comment"># Name or URL of the JavaScript and/or stylesheet CDN provider</span></span><br><span class="line"><span class="hljs-attr">    cdn:</span> <span class="hljs-string">jsdelivr</span></span><br><span class="line">    <span class="hljs-comment"># Name or URL of the webfont CDN provider</span></span><br><span class="line"><span class="hljs-attr">    fontcdn:</span> <span class="hljs-string">google</span></span><br><span class="line">    <span class="hljs-comment"># Name or URL of the webfont Icon CDN provider</span></span><br><span class="line"><span class="hljs-attr">    iconcdn:</span> <span class="hljs-string">fontawesome</span></span><br></pre></td></tr></table></figure><h2><span id="博客写作-writing"><strong>博客写作 Writing</strong></span></h2><ul><li><p><strong>默认</strong></p><figure class="highlight powershell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="hljs-string">"blog title"</span></span><br></pre></td></tr></table></figure></li><li><p><strong>自定义</strong></p><figure class="highlight yml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attr">title:</span> <span class="hljs-string">&#123;&#123;</span> <span class="hljs-string">blog</span> <span class="hljs-string">title</span> <span class="hljs-string">&#125;&#125;</span></span><br><span class="line"><span class="hljs-attr">categories:</span> <span class="hljs-string">&#123;&#123;</span> <span class="hljs-string">blog</span> <span class="hljs-string">category</span> <span class="hljs-string">&#125;&#125;</span></span><br><span class="line"><span class="hljs-attr">tags:</span></span><br><span class="line"><span class="hljs-bullet">-</span> <span class="hljs-string">&#123;&#123;</span> <span class="hljs-string">blog</span> <span class="hljs-string">tag</span> <span class="hljs-string">&#125;&#125;</span></span><br><span class="line"><span class="hljs-attr">date:</span> <span class="hljs-string">&#123;&#123;</span> <span class="hljs-string">YYYY-MM-DD</span> <span class="hljs-attr">HH:MM:SS</span> <span class="hljs-string">&#125;&#125;</span></span><br><span class="line"><span class="hljs-attr">thumbnail:</span> <span class="hljs-string">&#123;&#123;</span> <span class="hljs-string">blog</span> <span class="hljs-string">thumbnail</span> <span class="hljs-string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-string">&#123;&#123;</span> <span class="hljs-string">Abstract</span> <span class="hljs-string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-string">&lt;!--</span> <span class="hljs-string">more</span> <span class="hljs-bullet">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-string">&lt;!--</span> <span class="hljs-string">toc</span> <span class="hljs-bullet">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-string">&#123;&#123;</span> <span class="hljs-string">Content</span> <span class="hljs-string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">---</span></span><br></pre></td></tr></table></figure></li></ul><h2><span id="博客备份-backup"><strong>博客备份 Backup</strong></span></h2><ul><li><p><strong>Hexo备份:</strong> </p><figure class="highlight powershell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># master branch</span></span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></li><li><p><strong>Code备份:</strong> </p><figure class="highlight powershell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># dev branch</span></span><br><span class="line">$ git checkout dev</span><br><span class="line">$ git add --all</span><br><span class="line">$ git commit -m <span class="hljs-string">"new blog"</span></span><br><span class="line">$ git push origin dev</span><br></pre></td></tr></table></figure></li></ul><h2><span id="待办事项-todos"><strong>待办事项 Todos</strong></span></h2><ul><li>对应图标</li><li>更多插件</li><li>绑定域名</li><li>更新外链</li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;利用&lt;strong&gt;GitHub Pages+Hexo&lt;/strong&gt;打造一个个人博客，主要分为以下&lt;strong&gt;五个部分&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;环境准备 Environment&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件设置 Configuration&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;个性选项 Customization&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;博客写作 Writing&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;博客备份 Backup&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="Configuration" scheme="https://lottewong.github.io/categories/Configuration/"/>
    
    
      <category term="GitHub Pages" scheme="https://lottewong.github.io/tags/GitHub-Pages/"/>
    
      <category term="Hexo" scheme="https://lottewong.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
